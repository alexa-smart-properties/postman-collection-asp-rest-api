{
	"info": {
		"_postman_id": "1082f64e-2660-4f19-a09a-04640f53c255",
		"name": "Alexa Smart Properties - REST API Reference",
		"description": "## Description:\n\nThis Postman Collection describes Alexa Smart Properties APIs that you can use to build Alexa capabilities into property management applications.\n\n## How to use:\n\nFor usage instructions please see [https://github.com/alexa-smart-properties](https://github.com/alexa-smart-properties)/postman-collection-smart-properties-rest-apis",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "916448"
	},
	"item": [
		{
			"name": "Authorization",
			"item": [],
			"description": "## To call the Alexa Smart Properties APIs, you must include your API access token as part of the Authorization request header of each API call.\n\n## The API access token generation is based on a [Login With Amazon](https://developer.amazon.com/docs/login-with-amazon/documentation-overview.html) Security Profile usage.",
			"auth": {
				"type": "oauth2",
				"oauth2": [
					{
						"key": "useBrowser",
						"value": false,
						"type": "boolean"
					},
					{
						"key": "state",
						"value": "",
						"type": "string"
					},
					{
						"key": "scope",
						"value": "{{Scope}}",
						"type": "string"
					},
					{
						"key": "tokenName",
						"value": "ASP Bearer Token",
						"type": "string"
					},
					{
						"key": "challengeAlgorithm",
						"value": "S256",
						"type": "string"
					},
					{
						"key": "redirect_uri",
						"value": "http://127.0.0.1:9090/cb",
						"type": "string"
					},
					{
						"key": "grant_type",
						"value": "authorization_code",
						"type": "string"
					},
					{
						"key": "clientSecret",
						"value": "{{ClientSecret}}",
						"type": "string"
					},
					{
						"key": "clientId",
						"value": "{{ClientId}}",
						"type": "string"
					},
					{
						"key": "authUrl",
						"value": "https://www.amazon.com/ap/oa",
						"type": "string"
					},
					{
						"key": "addTokenTo",
						"value": "header",
						"type": "string"
					},
					{
						"key": "client_authentication",
						"value": "header",
						"type": "string"
					},
					{
						"key": "accessTokenUrl",
						"value": "https://api.amazon.com/auth/o2/token",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"pm.collectionVariables.unset(\"AccessToken\");",
							"pm.collectionVariables.unset(\"RefreshToken\");",
							"pm.collectionVariables.set(\"AccessToken\", jsonData.access_token);",
							"pm.collectionVariables.set(\"RefreshToken\", jsonData.refresh_token);"
						]
					}
				}
			]
		},
		{
			"name": "Unit Management",
			"item": [
				{
					"name": "Unit Settings",
					"item": [
						{
							"name": "Get Music Station",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v2/units/{{UnitId}}/settings/MusicExperience.defaultStationPreferences",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"units",
										"{{UnitId}}",
										"settings",
										"MusicExperience.defaultStationPreferences"
									]
								},
								"description": "Get the default music station preferences for a given unit.\n---\n\n*Required Request Path Parameters:*\n- `unitId`: The unit ID, in the format \"amzn1.alexa.unit.did.{id}\".\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-unit-api.html#get-the-default-music-station-setting)"
							},
							"response": []
						},
						{
							"name": "Set Music Station",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"providerId\": \"TUNEIN\",\n  \"stationId\": \"s16492\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v2/units/{{UnitId}}/settings/MusicExperience.defaultStationPreferences",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"units",
										"{{UnitId}}",
										"settings",
										"MusicExperience.defaultStationPreferences"
									]
								},
								"description": "Set the default music station preferences for a given unit.\n---\n\n*Required Request Path Parameters:*\n- `unitId`: The unit ID, in the format \"amzn1.alexa.unit.did.{id}\".\n\n*Required Request BOdy Parameters:*\n- `providerId`: The radio station provider ID.\n- `stationId`: The station ID.\n\n**Note:** Supported values for both `providerId` and `sationId` are available from online documentation [here](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-unit-api.html#provider-station-id).\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-unit-api.html#set-the-default-music-station-setting)"
							},
							"response": []
						},
						{
							"name": "Delete all Alarms for a Unit",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AccessToken}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{Host}}/v1/alerts/alarms?unitId={{UnitId}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"alerts",
										"alarms"
									],
									"query": [
										{
											"key": "unitId",
											"value": "{{UnitId}}",
											"description": "The unit ID, in the format \"amzn1.alexa.unit.did.{id}\" (Required Field)."
										}
									]
								},
								"description": "Delete all alarms on all endpoints in a unit.\n---\n\n*Required Request Query Parameters:*\n- `unitId`: The unit ID, in the format \"amzn1.alexa.unit.did.{id}\".\n\n\n**Note:** Be mindful of the `Authorization` header which only takes as value the \"LWA Token\" without \"Bearer\" as prefix.\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-unit-api.html#delete-all-alarms-for-unit)"
							},
							"response": []
						},
						{
							"name": "Delete all Timers for a Unit",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AccessToken}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{Host}}/v1/alerts/timers?unitId={{UnitId}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"alerts",
										"timers"
									],
									"query": [
										{
											"key": "unitId",
											"value": "{{UnitId}}",
											"description": "The unit ID, in the format \"amzn1.alexa.unit.did.{id}\" (Required Field)."
										}
									]
								},
								"description": "Delete all timers on all Endpoints in a Unit.\n---\n\n*Required Request Query Parameters:*\n- `unitId`: The unit ID, in the format \"amzn1.alexa.unit.did.{id}\".\n\n**Note:** Be mindful of the `Authorization` header which only takes as value the \"LWA Token\" without \"Bearer\" as prefix.\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-unit-api.html#delete-all-timers-for-unit)"
							},
							"response": []
						},
						{
							"name": "Delete all Reminders for a Unit",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AccessToken}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "https://{{Host}}/v1/alerts/reminders?unitId={{UnitId}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"alerts",
										"reminders"
									],
									"query": [
										{
											"key": "unitId",
											"value": "{{UnitId}}",
											"description": "The unit ID, in the format \"amzn1.alexa.unit.did.{id}\" (Required Field)."
										}
									]
								},
								"description": "Delete all Reminders on all Endpoints in a Unit.\n---\n\n*Required Request Query Parameters:*\n- `unitId`: The unit ID, in the format \"amzn1.alexa.unit.did.{id}\".\n\n**Note:** Be mindful of the `Authorization` header which only takes as value the \"LWA Token\" without \"Bearer\" as prefix.\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-unit-api.html#delete-all-alarms-for-unit)"
							},
							"response": []
						}
					],
					"description": "Use the Unit API to manage unit settings for Alexa Smart Ppoperties units such as rooms.\n---",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "List Units -  1-Depth Level from Organization ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{Host}}/v2/units?parentId={{OrgId}}",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v2",
								"units"
							],
							"query": [
								{
									"key": "parentId",
									"value": "{{OrgId}}",
									"description": "Identifier of the unit for which child units should be returned. In format of \"amzn1.alexa.unit.did.{id}\"."
								}
							]
						},
						"description": "List Units\n---\n\nCall `GET /v2/units/` to retrieve units. If there are no child units, an empty list will be returned. Only units that are accessible by the caller will be returned. All subunits will be returned up to depth specified (if any).\n\n*Required Request Path Parameters:*\n- `parentId` : Identifier of the unit for which child units should be returned. In format of \"amzn1.alexa.unit.did.{id}\".\n\nOnly Unit Identifier will be returned when no details are requested (i.e without query param `expand=all`\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-property-hierarchy-management-api.html#list-units)"
					},
					"response": []
				},
				{
					"name": "List Units -  1-Depth Level from Organization ID + Full Details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{Host}}/v2/units?parentId={{OrgId}}&expand=all",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v2",
								"units"
							],
							"query": [
								{
									"key": "parentId",
									"value": "{{OrgId}}",
									"description": "Identifier of the unit for which child units should be returned. In format of \"amzn1.alexa.unit.did.{id}\"."
								},
								{
									"key": "expand",
									"value": "all",
									"description": "An attribute (or set of attributes) to include in the response. Current values supported: all\nIf expand=all is not passed in the request, only the id property of the unit is returned in the response."
								}
							]
						},
						"description": "List Units\n---\n\nCall `GET /v2/units/` to retrieve units. If there are no child units, an empty list will be returned. Only units that are accessible by the caller will be returned. All subunits will be returned up to depth specified (if any).\n\n*Required Request Path Parameters:*\n- `parentId` : Identifier of the unit for which child units should be returned. In format of \"amzn1.alexa.unit.did.{id}\".\n\nOnly Unit Identifier will be returned when no details are requested (i.e without query param `expand=all`\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-property-hierarchy-management-api.html#list-units)"
					},
					"response": []
				},
				{
					"name": "List Units -  1-Depth Level + No Details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{Host}}/v2/units?parentId={{UnitId}}",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v2",
								"units"
							],
							"query": [
								{
									"key": "parentId",
									"value": "{{UnitId}}",
									"description": "Identifier of the unit for which child units should be returned. In format of \"amzn1.alexa.unit.did.{id}\"."
								}
							]
						},
						"description": "List Units\n---\n\nCall `GET /v2/units/` to retrieve units. If there are no child units, an empty list will be returned. Only units that are accessible by the caller will be returned. All subunits will be returned up to depth specified (if any).\n\n*Required Request Path Parameters:*\n- `parentId` : Identifier of the unit for which child units should be returned. In format of \"amzn1.alexa.unit.did.{id}\".\n\nOnly Unit Identifier will be returned when no details are requested (i.e without query param `expand=all`\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-property-hierarchy-management-api.html#list-units)"
					},
					"response": []
				},
				{
					"name": "List Units -  1-Depth Level + Full Details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{Host}}/v2/units?parentId={{UnitId}}&expand=all",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v2",
								"units"
							],
							"query": [
								{
									"key": "parentId",
									"value": "{{UnitId}}",
									"description": "Identifier of the unit for which child units should be returned. In format of \"amzn1.alexa.unit.did.{id}\"."
								},
								{
									"key": "expand",
									"value": "all",
									"description": "An attribute (or set of attributes) to include in the response. Current values supported: all\n\nIf expand=all is not passed in the request, only the id property of the unit is returned in the response."
								}
							]
						},
						"description": "List Units\n---\n\nCall `GET /v2/units/` to retrieve units. If there are no child units, an empty list will be returned. Only units that are accessible by the caller will be returned. All subunits will be returned up to depth specified (if any).\n\n*Required Request Path Parameters:*\n- `parentId` : Identifier of the unit for which child units should be returned. In format of \"amzn1.alexa.unit.did.{id}\".\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-property-hierarchy-management-api.html#list-units)"
					},
					"response": []
				},
				{
					"name": "List Units - Full Depth + Full Details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{Host}}/v2/units?parentId={{UnitId}}&queryDepth=all&expand=all",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v2",
								"units"
							],
							"query": [
								{
									"key": "parentId",
									"value": "{{UnitId}}",
									"description": "Identifier of the unit for which child units should be returned. In format of \"amzn1.alexa.unit.did.{id}\"."
								},
								{
									"key": "queryDepth",
									"value": "all",
									"description": "Controls the number of immediate depth of subunits to be returned."
								},
								{
									"key": "expand",
									"value": "all",
									"description": "An attribute (or set of attributes) to include in the response. Current values supported: all\nIf expand=all is not passed in the request, only the id property of the unit is returned in the response."
								}
							]
						},
						"description": "List Units\n---\n\nCall `GET /v2/units/` to retrieve units. If there are no child units, an empty list will be returned. Only units that are accessible by the caller will be returned. All subunits will be returned up to depth specified (if any).\n\n*Required Request Path Parameters:*\n- `parentId` : Identifier of the unit for which child units should be returned. In format of \"amzn1.alexa.unit.did.{id}\".\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-property-hierarchy-management-api.html#list-units)"
					},
					"response": []
				},
				{
					"name": "Get Unit",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{Host}}/v2/units/{{UnitId}}",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v2",
								"units",
								"{{UnitId}}"
							]
						},
						"description": "Retrieve Unit\n---\n\n\n*Required Request Path Parameters:*\n- `unitId`: Identifier for the unit you want to retrieve in the following format \"amzn1.alexa.unit.did.{id}\".\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-property-hierarchy-management-api.html#get-a-unit)"
					},
					"response": []
				},
				{
					"name": "Create Unit",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": {\n        \"type\": \"PLAIN\",\n        \"value\": {\n            \"text\": \"name of unit\"\n        }\n    },\n    \"parentId\": \"amzn1.alexa.unit.did.{unitId}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{Host}}/v2/units",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v2",
								"units"
							]
						},
						"description": "Create a unit to represent a physical unit (e.g. property, floor, wing, room) in your property\n---\n\nA Unit is an administrative construct for organizing people and resources (skill, devices) that interact with Alexa systems. Units are hierarchical in nature and can have zero or more sub units. A Unit's parent cannot be any of its sub units.\n\n*Required Request Body Parameters:*\n- `name.type` : The type of format the name.value field is expected in. Accepted value: PLAIN\n- `name.value` : The name of the unit.\n- `parentId` : Unit under which the newly created unit will exist.\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-property-hierarchy-management-api.html#create-a-unit)"
					},
					"response": []
				},
				{
					"name": "Update Unit Friendly Name",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": {\n        \"type\": \"PLAIN\",\n        \"value\": {\n            \"text\": \"name of unit\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{Host}}/v2/units/{{UnitId}}",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v2",
								"units",
								"{{UnitId}}"
							]
						},
						"description": "Update the name of the unit\n---\n\nCurrently an endpoint can only be associated with one unit at a time.\n\n*Required Request Path Parameters:*\n- `unitId`: Identifier for the unit you want to update in the following format \"amzn1.alexa.unit.did.{id}\".\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-property-hierarchy-management-api.html#update-a-unit)"
					},
					"response": []
				},
				{
					"name": "Delete Unit",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://{{Host}}/v2/units/{{UnitId}}",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v2",
								"units",
								"{{UnitId}}"
							]
						},
						"description": "Delete a unit.\n---\n\nCurrently an endpoint can only be associated with one unit at a time.\n\n*Required Request Path Parameters:*\n- `unitId`: Identifier for the unit you want to update in the following format \"amzn1.alexa.unit.did.{id}\".\n\n**Important**: If the unit has child Units, 400 Bad request will be returned.\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-property-hierarchy-management-api.html#delete-a-unit)"
					},
					"response": []
				}
			],
			"description": "APIs to perform several important property management tasks, such as managing units within the property, including the property itself and rooms under it.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Subscription Management",
			"item": [
				{
					"name": "Core",
					"item": [
						{
							"name": "Assign Core Subscription to Property (US Account)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"unitId\": \"{{UnitId}}\",\n  \"stage\": \"live\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v1/skills/amzn1.ask.skill.b4ca54a9-5e5f-4c60-93a0-d4cbd48640f2/enablements",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"skills",
										"amzn1.ask.skill.b4ca54a9-5e5f-4c60-93a0-d4cbd48640f2",
										"enablements"
									]
								},
								"description": "## Enable Core Subscription on a property in US marketplace\n\n_Required Request Path Parameters:_\n\n- `skillId`: `amzn1.ask.skill.b4ca54a9-5e5f-4c60-93a0-d4cbd48640f2` (Core Subscription in US)\n    \n\n_Required Request Body Parameters:_\n\n- `unitId`: The unit ID, in the format \"amzn1.alexa.unit.did.{id}\".\n    \n- `stage`: `live`\n    \n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-managing-subscriptions.html)"
							},
							"response": []
						}
					]
				},
				{
					"name": "Senior Living",
					"item": [
						{
							"name": "Assign Senior Living Subscription to Property (US Account)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"unitId\": \"{{UnitId}}\",\n  \"stage\": \"live\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v1/skills/amzn1.ask.skill.6a39c06f-58b4-4adb-8c7f-a75a9ca3f7e1/enablements",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"skills",
										"amzn1.ask.skill.6a39c06f-58b4-4adb-8c7f-a75a9ca3f7e1",
										"enablements"
									]
								},
								"description": "## Enable Senior Living Subscription on a property in US marketplace\n\n_Required Request Path Parameters:_\n\n- `skillId`: amzn1.ask.skill.6a39c06f-58b4-4adb-8c7f-a75a9ca3f7e1 (Senior Living Subscription in US)\n    \n\n_Required Request Body Parameters:_\n\n- `unitId`: The unit ID, in the format \"amzn1.alexa.unit.did.{id}\".\n- `stage`: `live`\n    \n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-managing-subscriptions.html)"
							},
							"response": []
						},
						{
							"name": "Assign Senior Living Subscription to Property (CA Account)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"unitId\": \"{{UnitId}}\",\n  \"stage\": \"live\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v1/skills/amzn1.ask.skill.2d1e40fa-3611-41d2-8b41-f4fb76ab4829/enablements",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"skills",
										"amzn1.ask.skill.2d1e40fa-3611-41d2-8b41-f4fb76ab4829",
										"enablements"
									]
								},
								"description": "## Enable Senior Living Subscription on a property in Canada Marketplace\n\n_Required Request Path Parameters:_\n\n- `skillId`: amzn1.ask.skill.2d1e40fa-3611-41d2-8b41-f4fb76ab4829 (Senior Living Subscription in Canada)\n    \n\n_Required Request Body Parameters:_\n\n- `unitId`: The unit ID, in the format \"amzn1.alexa.unit.did.{id}\".\n- `stage`: `live`\n    \n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-managing-subscriptions.html)"
							},
							"response": []
						},
						{
							"name": "Assign Senior Living Subscription to Property (UK Account)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"unitId\": \"{{UnitId}}\",\n  \"stage\": \"live\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v1/skills/amzn1.ask.skill.a501f73e-aaf7-4d9b-a5b4-67c37b1bbabf/enablements",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"skills",
										"amzn1.ask.skill.a501f73e-aaf7-4d9b-a5b4-67c37b1bbabf",
										"enablements"
									]
								},
								"description": "## Enable Senior Living Subscription on a property in UK marketplace\n\n_Required Request Path Parameters:_\n\n- `skillId`: amzn1.ask.skill.a501f73e-aaf7-4d9b-a5b4-67c37b1bbabf (Senior Living Subscription in UK)\n    \n\n_Required Request Body Parameters:_\n\n- `unitId`: The unit ID, in the format \"amzn1.alexa.unit.did.{id}\".\n- `stage`: The selected skill stage: `development` or `live`\n    \n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-managing-subscriptions.html)"
							},
							"response": []
						},
						{
							"name": "Assign Senior Living Subscription to Property (DE Account)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"unitId\": \"{{UnitId}}\",\n  \"stage\": \"live\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v1/skills/amzn1.ask.skill.bf08c62f-49e9-4318-a79d-b7eb0787f62f/enablements",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"skills",
										"amzn1.ask.skill.bf08c62f-49e9-4318-a79d-b7eb0787f62f",
										"enablements"
									]
								},
								"description": "## Enable Senior Living Subscription on a property in Germany Marketplace\n\n_Required Request Path Parameters:_\n\n- `skillId`: amzn1.ask.skill.bf08c62f-49e9-4318-a79d-b7eb0787f62f (Senior Living Subscription in Germany)\n    \n\n_Required Request Body Parameters:_\n\n- `unitId`: The unit ID, in the format \"amzn1.alexa.unit.did.{id}\".\n- `stage`: `live`\n    \n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-managing-subscriptions.html)"
							},
							"response": []
						},
						{
							"name": "Assign Senior Living Subscription to Property (FR Account)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"unitId\": \"{{UnitId}}\",\n  \"stage\": \"live\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v1/skills/amzn1.ask.skill.45e4d2c4-54b4-4186-af3f-3f51d22e45f6/enablements",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"skills",
										"amzn1.ask.skill.45e4d2c4-54b4-4186-af3f-3f51d22e45f6",
										"enablements"
									]
								},
								"description": "## Enable Senior Living Subscription on a property in France marketplace\n\n- `skillId`: amzn1.ask.skill.6a39c06f-58b4-4adb-8c7f-a75a9ca3f7e1 (Senior Living Subscription)\n    \n\n_Required Request Body Parameters:_\n\n- `unitId`: The unit ID, in the format \"amzn1.alexa.unit.did.{id}\".\n- `stage`: The selected skill stage: `development` or `live`\n    \n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-managing-subscriptions.html)"
							},
							"response": []
						},
						{
							"name": "Assign Senior Living Subscription to Property (IT Account)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"unitId\": \"{{UnitId}}\",\n  \"stage\": \"live\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v1/skills/amzn1.ask.skill.19d6addf-71d4-43ae-8dba-1b83142db872/enablements",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"skills",
										"amzn1.ask.skill.19d6addf-71d4-43ae-8dba-1b83142db872",
										"enablements"
									]
								},
								"description": "## Enable Senior Living Subscription on a property in Italy marketplace\n\n_Required Request Path Parameters:_\n\n- `skillId`: amzn1.ask.skill.19d6addf-71d4-43ae-8dba-1b83142db872 (Senior Living Subscription in Italy marketplace)\n    \n\n_Required Request Body Parameters:_\n\n- `unitId`: The unit ID, in the format \"amzn1.alexa.unit.did.{id}\".\n- `stage`: `live`\n    \n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-managing-subscriptions.html)"
							},
							"response": []
						}
					]
				},
				{
					"name": "Healthcare",
					"item": [
						{
							"name": "Assign Healthcare Subscription to Property (US Account)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"unitId\": \"{{UnitId}}\",\n  \"stage\": \"live\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v1/skills/amzn1.ask.skill.90c5a544-3ea5-459e-8275-b925a0f84224/enablements",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"skills",
										"amzn1.ask.skill.90c5a544-3ea5-459e-8275-b925a0f84224",
										"enablements"
									]
								},
								"description": "## Enable Healthcare Subscription on a property in US marketplace\n\n_Required Request Path Parameters:_\n\n- `skillId`: amzn1.ask.skill.6a39c06f-58b4-4adb-8c7f-a75a9ca3f7e1 (Healthcare Subscription in US)\n    \n\n_Required Request Body Parameters:_\n\n- `unitId`: The unit ID, in the format \"amzn1.alexa.unit.did.{id}\".\n- `stage`: `live`\n    \n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-managing-subscriptions.html)"
							},
							"response": []
						}
					]
				},
				{
					"name": "Hospitality",
					"item": [
						{
							"name": "Assign Hospitality Subscription to Property (US Account)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"unitId\": \"{{UnitId}}\",\n  \"stage\": \"live\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v1/skills/amzn1.ask.skill.a4697856-173d-4b66-91a3-ef4b083992f5/enablements",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"skills",
										"amzn1.ask.skill.a4697856-173d-4b66-91a3-ef4b083992f5",
										"enablements"
									]
								},
								"description": "## Enable Hospitality Subscription on a property in US marketplace\n\n_Required Request Path Parameters:_\n\n- `skillId`: amzn1.ask.skill.a4697856-173d-4b66-91a3-ef4b083992f5 (Hospitality Subscription in US)\n    \n\n_Required Request Body Parameters:_\n\n- `unitId`: The unit ID, in the format \"amzn1.alexa.unit.did.{id}\".\n    \n- `stage`: `live`\n    \n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-managing-subscriptions.html)"
							},
							"response": []
						},
						{
							"name": "Assign Hospitality Subscription to Property (CA Account)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"unitId\": \"{{UnitId}}\",\n  \"stage\": \"live\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v1/skills/amzn1.ask.skill.eac80ad0-ab7d-41db-9f21-1e34747c7cb5/enablements",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"skills",
										"amzn1.ask.skill.eac80ad0-ab7d-41db-9f21-1e34747c7cb5",
										"enablements"
									]
								},
								"description": "## Enable Hospitality Subscription on a property in Canada Marketplace\n\n_Required Request Path Parameters:_\n\n- `skillId`: amzn1.ask.skill.eac80ad0-ab7d-41db-9f21-1e34747c7cb5 (Hospitality in Canada)\n    \n\n_Required Request Body Parameters:_\n\n- `unitId`: The unit ID, in the format \"amzn1.alexa.unit.did.{id}\".\n    \n- `stage`: `live`\n    \n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-managing-subscriptions.html)"
							},
							"response": []
						},
						{
							"name": "Assign Hospitality Subscription to Property (UK Account)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"unitId\": \"{{UnitId}}\",\n  \"stage\": \"live\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v1/skills/amzn1.ask.skill.06322139-c2a9-4c59-a4b6-354b37aafb33/enablements",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"skills",
										"amzn1.ask.skill.06322139-c2a9-4c59-a4b6-354b37aafb33",
										"enablements"
									]
								},
								"description": "## Enable Hospitality Subscription on a property in UK marketplace\n\n_Required Request Path Parameters:_\n\n- `skillId`: amzn1.ask.skill.a501f73e-aaf7-4d9b-a5b4-67c37b1bbabf (Hospitality Subscription in UK)\n    \n\n_Required Request Body Parameters:_\n\n- `unitId`: The unit ID, in the format \"amzn1.alexa.unit.did.{id}\".\n- `stage`: The selected skill stage: `development` or `live`\n    \n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-managing-subscriptions.html)"
							},
							"response": []
						},
						{
							"name": "Assign Hospitality Subscription to Property (DE Account)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"unitId\": \"{{UnitId}}\",\n  \"stage\": \"live\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v1/skills/amzn1.ask.skill.de46bda1-550d-4381-9a08-17204f9e935e/enablements",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"skills",
										"amzn1.ask.skill.de46bda1-550d-4381-9a08-17204f9e935e",
										"enablements"
									]
								},
								"description": "## Enable Hospitality Subscription on a property in Germany Marketplace\n\n_Required Request Path Parameters:_\n\n- `skillId`: amzn1.ask.skill.de46bda1-550d-4381-9a08-17204f9e935e (Hospitality Subscription in Germany)\n    \n\n_Required Request Body Parameters:_\n\n- `unitId`: The unit ID, in the format \"amzn1.alexa.unit.did.{id}\".\n    \n- `stage`: `live`\n    \n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-managing-subscriptions.html)"
							},
							"response": []
						},
						{
							"name": "Assign Hospitality Subscription to Property (FR Account)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"unitId\": \"{{UnitId}}\",\n  \"stage\": \"live\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v1/skills/amzn1.ask.skill.3c136caa-8b11-4210-a5e9-7bdd9f2c606a/enablements",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"skills",
										"amzn1.ask.skill.3c136caa-8b11-4210-a5e9-7bdd9f2c606a",
										"enablements"
									]
								},
								"description": "## Enable Hospitality Subscription on a property in French marketplace\n\n_Required Request Path Parameters:_\n\n- `skillId`: amzn1.ask.skill.3c136caa-8b11-4210-a5e9-7bdd9f2c606a (Hospitality Subscription in France)\n    \n\n_Required Request Body Parameters:_\n\n- `unitId`: The unit ID, in the format \"amzn1.alexa.unit.did.{id}\".\n    \n- `stage`: The selected skill stage: `development` or `live`\n    \n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-managing-subscriptions.html)"
							},
							"response": []
						},
						{
							"name": "Assign Hospitality Subscription to Property (IT Account)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"unitId\": \"{{UnitId}}\",\n  \"stage\": \"live\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v1/skills/amzn1.ask.skill.fba6aef7-cc2c-474a-992a-68b118970548/enablements",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"skills",
										"amzn1.ask.skill.fba6aef7-cc2c-474a-992a-68b118970548",
										"enablements"
									]
								},
								"description": "## Enable Hospitality Subscription on a property in Italy marketplace\n\n_Required Request Path Parameters:_\n\n- `skillId`: amzn1.ask.skill.fba6aef7-cc2c-474a-992a-68b118970548 (Hospitality Subscription in Italy marketplace)\n    \n\n_Required Request Body Parameters:_\n\n- `unitId`: The unit ID, in the format \"amzn1.alexa.unit.did.{id}\".\n    \n- `stage`: `live`\n    \n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-managing-subscriptions.html)"
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Role Management",
			"item": [
				{
					"name": "List All Roles for a given Unit",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{Host}}/v1/roles?unitId={{UnitId}}",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v1",
								"roles"
							],
							"query": [
								{
									"key": "unitId",
									"value": "{{UnitId}}",
									"description": "The unit ID, in the format \"amzn1.alexa.unit.did.{id}\" (Required Field)."
								}
							]
						},
						"description": "Get the list of roles defined for the specified unit (property or room type or room) that can be assigned to a user.\n---\n*Required Request Query Parameters:*\n- `unitId`: The unit ID, in the format \"amzn1.alexa.unit.did.{id}\".\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-role-api.html#listRoles)"
					},
					"response": []
				},
				{
					"name": "List All Roles for a given Unit - Next Page",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{Host}}/v1/roles?unitId={{UnitId}}&nextToken={{NextToken}}",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v1",
								"roles"
							],
							"query": [
								{
									"key": "unitId",
									"value": "{{UnitId}}",
									"description": "The unit ID, in the format \"amzn1.alexa.unit.did.{id}\" (Required Field)."
								},
								{
									"key": "nextToken",
									"value": "{{NextToken}}",
									"description": "Continuation token returned in the response object of the previous list-roles response."
								}
							]
						},
						"description": "Get the list of roles defined for the specified unit (property or room type or room) that can be assigned to a user.\n\nThis call illustrates how to get subsequent pages from a paginated result (Basically reusing the token from previous response body from field `paginationContext.nextToken`).\nYou can find more details about handling pagination in Query Results from our documentation [here](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-pagination.html#request-the-next-page-of-results).\n\n---\n*Required Request Query Parameters:*\n- `unitId`: The unit ID, in the format \"amzn1.alexa.unit.did.{id}\".\n\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-role-api.html#listRoles)"
					},
					"response": []
				},
				{
					"name": "List A4P.UnitAdmin Roles for a given Unit",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{Host}}/v1/roles?unitId={{UnitId}}&roleName=A4P.UnitAdmin",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v1",
								"roles"
							],
							"query": [
								{
									"key": "unitId",
									"value": "{{UnitId}}",
									"description": "The unit ID, in the format \"amzn1.alexa.unit.did.{id}\" (Required Field)."
								},
								{
									"key": "roleName",
									"value": "A4P.UnitAdmin",
									"description": "Role name filter in case the client is interested in the details of a particular role."
								}
							]
						},
						"description": "Get the list of roles of type `A4P.UnitAdmin` defined for the specified unit that can be assigned to a user.\n---\n*Required Request Query Parameters:*\n- `unitId`: The unit ID, in the format \"amzn1.alexa.unit.did.{id}\".\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-role-api.html#listRoles)"
					},
					"response": []
				},
				{
					"name": "Get Role",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{Host}}/v1/roles/{{RoleId}}",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v1",
								"roles",
								"{{RoleId}}"
							]
						},
						"description": "Get the details for the specified role.\n---\n*Required Request Path Parameters:*\n- `roleId`: The role ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.role.did.{id}\". Use this ID to assign the role to users.\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-role-api.html#get-a-role)"
					},
					"response": []
				},
				{
					"name": "List Principals assigned to Role",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{Host}}/v1/roles/{{RoleId}}/assignments",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v1",
								"roles",
								"{{RoleId}}",
								"assignments"
							]
						},
						"description": "Get the list of principal assignments for the specified role.\n---\n*Required Request Path Parameters:*\n\n- `roleId`: The role ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.role.did.{id}\". Use this ID to assign the role to users.\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-role-api.html#list-principal-assignments-for-a-role)"
					},
					"response": []
				},
				{
					"name": "List Roles assigned to Principal",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{Host}}/v1/roles/assignments?principalId={{PrincipalId}}&unitId={{UnitId}}&maxResults={{MaxResults}}&nextToken={{NextToken}}",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v1",
								"roles",
								"assignments"
							],
							"query": [
								{
									"key": "principalId",
									"value": "{{PrincipalId}}",
									"description": "The principal ID, in the format \"amzn1.account.{id}\" (Required Field)."
								},
								{
									"key": "unitId",
									"value": "{{UnitId}}",
									"description": "The unit ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.role.did.{id}\" (Required Field)."
								},
								{
									"key": "maxResults",
									"value": "{{MaxResults}}",
									"description": "Maximum number of results to display. The value of this parameter must between 1 and 10. Default is 10 (Optional Field)"
								},
								{
									"key": "nextToken",
									"value": "{{NextToken}}",
									"description": "Token used for getting the next page of results. (Optional Field)"
								}
							]
						},
						"description": "Get the list of role assignments for the specified principal for the specified unit (property or room type or room).\n---\n*Required Request Path Parameters:*\n\n- `roleId`: The role ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.role.did.{id}\". Use this ID to assign the role to users.\n\n*Required Request Query Parameters:*\n- `principalId`: The principal ID, in the format \"amzn1.account.{id}\".\n- `unitId`: The unit ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.role.did.{id}\".\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-role-api.html#list-role-assignments-for-a-principal)"
					},
					"response": []
				},
				{
					"name": "Assign Role to Principal",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"principalId\": \"{{PrincipalId}}\",\n    \"propagate\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{Host}}/v1/roles/{{RoleId}}/assignments",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v1",
								"roles",
								"{{RoleId}}",
								"assignments"
							]
						},
						"description": "Assign a role to the specified principal (user ID).\n---\n*Required Request Path Parameters:*\n- `roleId`: The role ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.role.did.{id}\". Use this ID to assign the role to users.\n\n*Required Request Body Parameters:*\n- `principalId`: User ID of the principal to whom to assign the role.\n\n---\nFor details about how to retrieve the principal (user ID) that you'll need for the principal, see [Obtain Customer Profile Information](https://developer.amazon.com/docs/login-with-amazon/obtain-customer-profile.html)\n\n**Note:** This API throws a 400 Bad Request Exception if you attempt to assign a role to a principal who is already assigned that particular role.\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-role-api.html#assignRole)"
					},
					"response": []
				},
				{
					"name": "Bulk Operation - Assign Role to Principal",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"items\": [\n     {\n        \"itemId\" : 0,\n        \"principalId\": \"{{PrincipalId#1}}\",\n        \"propagate\": false\n     },\n     {\n        \"itemId\" : 1,         \n        \"principalId\": \"{{PrincipalId#2}}\",\n        \"propagate\": true\n     },\n     {\n        \"itemId\" : 2,\n        \"principalId\": \"{{PrincipalId#3}}\",\n        \"propagate\": false\n     }\n   ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{Host}}/v1/roles/{{RoleId}}/assignments/batchAssign",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v1",
								"roles",
								"{{RoleId}}",
								"assignments",
								"batchAssign"
							]
						},
						"description": "Batch Assign a role to multiple principals (user ID).\n---\n*Required Request Path Parameters:*\n- `roleId`: The role ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.role.did.{id}\". Use this ID to assign the role to users.\n\n*Required Request Body Parameters:*\n- `items `: Array of assign role request objects. The maximum number of request items in the batch request is 50.\n- `items[*].itemId`: Unique identifier for the request item.\n- `items[*].principalId`: User ID of the principal to whom to assign the role.\n\n**Note**: After accepting the request, this operation performs synchronous validations and then returns a 202 (Accepted) response. Each principal is then assigned to the role asynchronously in the background.\n\nIn the case of invalid inputs, the entire batch operation fails. That is, either all the request items are processed or none.\n\n---\nFor details about how to retrieve the principal (user ID) that you'll need for the principal, see [Obtain Customer Profile Information](https://developer.amazon.com/docs/login-with-amazon/obtain-customer-profile.html)\n\n**Note:** This API throws a 400 Bad Request Exception if you attempt to assign a role to a principal who is already assigned that particular role.\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-role-api.html#batch-assign-role)"
					},
					"response": []
				},
				{
					"name": "Bulk Operation - Revoke Role assignement",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"items\": [\n     {\n        \"itemId\" : 0,\n        \"principalId\": \"{{PrincipalId#1}}\",\n        \"propagate\": false\n     },\n     {\n        \"itemId\" : 1,         \n        \"principalId\": \"{{PrincipalId#2}}\",\n        \"propagate\": true\n     },\n     {\n        \"itemId\" : 2,\n        \"principalId\": \"{{PrincipalId#3}}\",\n        \"propagate\": false\n     }\n   ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{Host}}/v1/roles/{{RoleId}}/assignments/batchRevoke",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v1",
								"roles",
								"{{RoleId}}",
								"assignments",
								"batchRevoke"
							]
						},
						"description": "Batch revoke a role for multiple principals (user ID).\n---\n*Required Request Path Parameters:*\n- `roleId`: The role ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.role.did.{id}\". Use this ID to assign the role to users.\n\n*Required Request Body Parameters:*\n- `items `: Array of assign role request objects. The maximum number of request items in the batch request is 50.\n- `items[*].itemId`: Unique identifier for the request item.\n- `items[*].principalId`: User ID of the principal to whom to assign the role.\n\n**Note**: After accepting the request, this operation performs perform synchronous validations and then returns a 202 (Accepted) response. Each principal is then revoked for the role asynchronously in the background.\n\nIn the case of invalid inputs, the entire batch operation fails. That is, either all the request items are processed or none.\n\n---\nFor details about how to retrieve the principal (user ID) that you'll need for the principal, see [Obtain Customer Profile Information](https://developer.amazon.com/docs/login-with-amazon/obtain-customer-profile.html)\n\n**Note:** This API throws a 400 Bad Request Exception if you attempt to assign a role to a principal who is already assigned that particular role.\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-role-api.html#batch-revoke-a-role-assignment)"
					},
					"response": []
				},
				{
					"name": "Revoke Role assignement",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://{{Host}}/v1/roles/{{RoleId}}/assignments?principalId={{PrincipalId}}",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v1",
								"roles",
								"{{RoleId}}",
								"assignments"
							],
							"query": [
								{
									"key": "principalId",
									"value": "{{PrincipalId}}",
									"description": "The principal ID for the principal whose role is to be revoked (Required Field)."
								}
							]
						},
						"description": "Revoke a role for the specified principal (user ID).\n---\n*Required Request Path Parameters:*\n- `roleId`: The role ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.role.did.{id}\". Use this ID to assign the role to users.\n\n*Required Request Query Parameters:*\n- `principalId`: User ID of the principal to whom to assign the role.\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-role-api.html#revoke-a-role-assignment)"
					},
					"response": []
				}
			],
			"description": "An Alexa Smart Properties user must have an assigned role before they can access any Alexa Smart Properties resources. The creator of a unit is assigned the administrator role for that unit automatically.\n---",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Endpoint Management",
			"item": [
				{
					"name": "List Devices in Account - Identifiers Only",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{Host}}/v2/endpoints?owner=~caller",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v2",
								"endpoints"
							],
							"query": [
								{
									"key": "owner",
									"value": "~caller",
									"description": "Filter endpoints to only those endpoints that the caller owns (Required FIeld)."
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Get the list of endpoints that you registered to your Amazon Business account.\n---\n*Required Request Query Parameters:*\n- `owner`: Filter endpoints to only those endpoints that the caller owns. The only value currently supported is \"~caller\", that represents the customer information in the bearer token.\n\n**Note:** This call only returns endpoints identifiers that are *not* associated with any units. To enumerate endpoints associated with a specific unit, see [Enumerate endpoints associated with a unit](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#enumerate-unit-endpoints).\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#enumerate-endpoints)"
					},
					"response": []
				},
				{
					"name": "List Devices in Account - Identifiers with Details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{Host}}/v2/endpoints?owner=~caller&expand=all",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v2",
								"endpoints"
							],
							"query": [
								{
									"key": "owner",
									"value": "~caller",
									"description": "Filter endpoints to only those endpoints that the caller owns (Required FIeld)."
								},
								{
									"key": "expand",
									"value": "all",
									"description": "An attribute (or set of attributes) to include in the response."
								}
							]
						},
						"description": "Get the list of endpoints that you registered to your Amazon Business account.\n---\n*Required Request Query Parameters:*\n- `owner`: Filter endpoints to only those endpoints that the caller owns. The only value currently supported is \"~caller\", that represents the customer information in the bearer token.\n\n**Note:** This call only returns endpoints that are *not* associated with any units. To enumerate endpoints associated with a specific unit, see [Enumerate endpoints associated with a unit](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#enumerate-unit-endpoints).\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#enumerate-endpoints)"
					},
					"response": []
				},
				{
					"name": "List Devices in Account - Identifiers with Details and Connectivity",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{Host}}/v2/endpoints?owner=~caller&expand=all&expand=feature:connectivity",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v2",
								"endpoints"
							],
							"query": [
								{
									"key": "owner",
									"value": "~caller",
									"description": "Filter endpoints to only those endpoints that the caller owns (Required FIeld)."
								},
								{
									"key": "expand",
									"value": "all",
									"description": "An attribute (or set of attributes) to include in the response."
								},
								{
									"key": "expand",
									"value": "feature:connectivity",
									"description": "An attribute (or set of attributes) to include in the response."
								}
							]
						},
						"description": "Get the list of endpoints that you registered to your Amazon Business account.\n---\n*Required Request Query Parameters:*\n- `owner`: Filter endpoints to only those endpoints that the caller owns. The only value currently supported is \"~caller\", that represents the customer information in the bearer token.\n\n**Note:** This call only returns endpoints that are *not* associated with any units. To enumerate endpoints associated with a specific unit, see [Enumerate endpoints associated with a unit](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#enumerate-unit-endpoints).\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#enumerate-endpoints)"
					},
					"response": []
				},
				{
					"name": "List Devices in Unit - Identifiers Only",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{Host}}/v2/endpoints?associatedUnits.id={{UnitId}}",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v2",
								"endpoints"
							],
							"query": [
								{
									"key": "associatedUnits.id",
									"value": "{{UnitId}}",
									"description": "Filter endpoints to only those endpoints that are associated with a particular unit (Required Field)."
								}
							]
						},
						"description": "Enumerate endpoints associated with a particular unit that the caller has permission to access\n---\n*Required Request Query Parameters:*\n- `associatedUnits.id`: Filter endpoints to only those endpoints that are associated with a particular unit.\n\n**Note:** This call only returns endpoints that are associated with the given unit. To enumerate endpoints associated with your Amazon Business Account, see [Enumerate endpoints associated with a unit](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#enumerate-endpoints).\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#enumerate-unit-endpoints)"
					},
					"response": []
				},
				{
					"name": "List Devices in Unit - Identifiers with Details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{Host}}/v2/endpoints?associatedUnits.id={{UnitId}}&expand=all",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v2",
								"endpoints"
							],
							"query": [
								{
									"key": "associatedUnits.id",
									"value": "{{UnitId}}",
									"description": "Filter endpoints to only those endpoints that are associated with a particular unit (Required Field)."
								},
								{
									"key": "expand",
									"value": "all",
									"description": "An attribute (or set of attributes) to include in the response."
								}
							]
						},
						"description": "Enumerate endpoints associated with a particular unit that the caller has permission to access\n---\n*Required Request Query Parameters:*\n- `associatedUnits.id`: Filter endpoints to only those endpoints that are associated with a particular unit.\n\n**Note:** This call only returns endpoints that are associated with the given unit. To enumerate endpoints associated with your Amazon Business Account, see [Enumerate endpoints associated with a unit](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#enumerate-endpoints).\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#enumerate-unit-endpoints)"
					},
					"response": []
				},
				{
					"name": "List Devices in Unit - Identifiers with Details and Connectivity",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{Host}}/v2/endpoints?associatedUnits.id={{UnitId}}&expand=all&expand=feature:connectivity",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v2",
								"endpoints"
							],
							"query": [
								{
									"key": "associatedUnits.id",
									"value": "{{UnitId}}",
									"description": "Filter endpoints to only those endpoints that are associated with a particular unit (Required Field)."
								},
								{
									"key": "expand",
									"value": "all",
									"description": "An attribute (or set of attributes) to include in the response."
								},
								{
									"key": "expand",
									"value": "feature:connectivity",
									"description": "An attribute (or set of attributes) to include in the response."
								}
							]
						},
						"description": "Enumerate endpoints associated with a particular unit that the caller has permission to access\n---\n*Required Request Query Parameters:*\n- `associatedUnits.id`: Filter endpoints to only those endpoints that are associated with a particular unit.\n\n**Note:** This call only returns endpoints that are associated with the given unit. To enumerate endpoints associated with your Amazon Business Account, see [Enumerate endpoints associated with a unit](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#enumerate-endpoints).\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#enumerate-unit-endpoints)"
					},
					"response": []
				},
				{
					"name": "Get Device",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}?expand=all",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v2",
								"endpoints",
								"{{EndpointId}}"
							],
							"query": [
								{
									"key": "expand",
									"value": "all",
									"description": "An attribute (or set of attributes) to include in the response."
								}
							]
						},
						"description": "Retrieve an endpoint and list values for all endpoint attributes the caller has permission to access.\n---\n*Required Request Path Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#retrieve-endpoint)"
					},
					"response": []
				},
				{
					"name": "Get Device Connectivity Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/features/connectivity",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v2",
								"endpoints",
								"{{EndpointId}}",
								"features",
								"connectivity"
							]
						},
						"description": "Get states and attributes related to connectivity of the endpoint\n---\n*Required Request Path Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#query-connectivity-status)"
					},
					"response": []
				},
				{
					"name": "Remove Device from Account Copy",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/deregister",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v2",
								"endpoints",
								"{{EndpointId}}",
								"deregister"
							]
						},
						"description": "Deregister an endpoint from your Amazon Business account.\n---\n*Required Request Path Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#deregister-endpoint)"
					},
					"response": []
				},
				{
					"name": "Query Devices - Filter on Multiple Units - Endpoint Identifiers Only",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"query\": {\n    \"or\": [\n      {\n        \"match\": {\n          \"associatedUnits.id\": \"amzn1.alexa.unit.did.unitOne\"\n        }\n      },\n      {\n        \"match\": {\n          \"associatedUnits.id\": \"amzn1.alexa.unit.did.unitTwo\"\n        }\n      }\n    ]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{Host}}/v2/endpointQuery",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v2",
								"endpointQuery"
							]
						},
						"description": "Deregister an endpoint from your Amazon Business account.\n---\n*Required Request Path Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#deregister-endpoint)"
					},
					"response": []
				},
				{
					"name": "Query Devices - Filter on Multiple Units - Endpoint Identifiers + Details + Connectivity",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"query\": {\n    \"or\": [\n      {\n        \"match\": {\n          \"associatedUnits.id\": \"amzn1.alexa.unit.did.unitOne\"\n        }\n      },\n      {\n        \"match\": {\n          \"associatedUnits.id\": \"amzn1.alexa.unit.did.unitTwo\"\n        }\n      }\n    ]\n  },\n  \"expand\": [\n    \"all\", \"feature:connectivity\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{Host}}/v2/endpointQuery",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v2",
								"endpointQuery"
							]
						},
						"description": "Deregister an endpoint from your Amazon Business account.\n---\n*Required Request Path Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#deregister-endpoint)"
					},
					"response": []
				},
				{
					"name": "Query Devices - Filter on Multiple Units and Device Manufacturer - Endpoint Identifiers + Details + Connectivity",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"query\": {\n    \"or\": [\n      {\n        \"match\": {\n          \"associatedUnits.id\": \"amzn1.alexa.unit.did.unitOne\"\n        }\n      },\n      {\n        \"match\": {\n          \"associatedUnits.id\": \"amzn1.alexa.unit.did.unitTwo\"\n        }\n      },\n      {\n        \"match\": {\n          \"manufacturer.value.text\": \"Amazon\"\n        }\n      }\n    ]\n  },\n  \"expand\": [\n    \"all\", \"feature:connectivity\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{Host}}/v2/endpointQuery",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v2",
								"endpointQuery"
							]
						},
						"description": "Deregister an endpoint from your Amazon Business account.\n---\n*Required Request Path Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#deregister-endpoint)"
					},
					"response": []
				},
				{
					"name": "Forget Device",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/forget",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v2",
								"endpoints",
								"{{EndpointId}}",
								"forget"
							]
						},
						"description": "Forget an endpoint.\n---\n\n*Required Request Path Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n**Note:** This call only applies to Alexa's representation of the endpoint. It doesn't propagate back to the entity that reported the endpoint to Alexa (for example, a smart home skill). To ensure the endpoint is not automatically reconnected to Alexa, remove it from the reporter. For example, for endpoints that are reported by a manufacturer's smart home skill, remove the endpoint from the manufacturer's app before calling forget.\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#forget-endpoint)"
					},
					"response": []
				},
				{
					"name": "Update Device Friendly Name",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"PLAIN\",\n  \"value\": {\n    \"text\": \"Dark Vador\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/friendlyName",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v2",
								"endpoints",
								"{{EndpointId}}",
								"friendlyName"
							]
						},
						"description": "Change the friendly name for an endpoint.\n---\n\n*Required Request Path Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n*Required Request Body Parameters:*\n- `type`: The name value type. Currently the only supported value is \"PLAIN\".\n- `value`: A Value object containing the friendly name for the endpoint.\n\n**Note:** Alexa uses the friendly name for all GUI and VUI experiences. Customers can use the friendly name to control an endpoint, for example, \"*Alexa, turn on {friendlyName}*\".\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#change-an-endpoints-friendly-name)"
					},
					"response": []
				},
				{
					"name": "Associate Device to Unit",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"id\": \"{{UnitId}}\"\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/associatedUnits",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v2",
								"endpoints",
								"{{EndpointId}}",
								"associatedUnits"
							]
						},
						"description": "Update the list of associated units for an endpoint.\n---\n\nCurrently an endpoint can only be associated with one unit at a time.\n\n*Required Request Path Parameters:*\n- `endpointid`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n*Required Request Body Parameters:*\n- The list of units to associate with the endpoint. Each element in the array is a unit ID, in the format \"amzn1.alexa.unit.did.{id}\". \n\n**Important**: The endpoint must have an active connection when changing unit associations. Please keep the device powered on and online for 1 minute after successfully calling this API.\n\n**Warning**: *When you change unit associations for an endpoint, the `endpointId` might change. The new `endpointId` is returned in the response.*\n\n**Note:** Settings should be applied only after a device is associated with a unit. Any settings that have been applied to a device are cleared when its unit association is updated. After the `PUT associatedUnits` API is called and a 200 code is returned, you should confirm that the endpoint was successfully restarted. \n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#assign-endpoint-to-unit)"
					},
					"response": []
				},
				{
					"name": "Reset Device to Account",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"id\": \"~caller.defaultUnitId\"\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/associatedUnits",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v2",
								"endpoints",
								"{{EndpointId}}",
								"associatedUnits"
							]
						},
						"description": "Update the list of associated units for an endpoint.\n---\n\nCurrently an endpoint can only be associated with one unit at a time.\n\n*Required Request Path Parameters:*\n- `endpointid`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n*Required Request Body Parameters:*\n- The list of units to associate with the endpoint. To reset device to your Amazon Business Account, you will specify the caller's default unit by using \"~caller.defaultUnitId\" \n\n**Important**: The endpoint must have an active connection when changing unit associations. Please keep the device powered on and online for 1 minute after successfully calling this API.\n\n**Warning**: *When you change unit associations for an endpoint, the `endpointId` might change. The new `endpointId` is returned in the response.*\n\n**Note:** Settings should be applied only after a device is associated with a unit. Any settings that have been applied to a device are cleared when its unit association is updated. After the `PUT associatedUnits` API is called and a 200 code is returned, you should confirm that the endpoint was successfully restarted. \n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#assign-endpoint-to-unit)"
					},
					"response": []
				},
				{
					"name": "Get Device from DSN - Identifier Only",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{Host}}/v2/endpoints?serialNumber.value.text={{DSN}}",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v2",
								"endpoints"
							],
							"query": [
								{
									"key": "serialNumber.value.text",
									"value": "{{DSN}}",
									"description": "the Device Serial Number to filter on"
								}
							]
						},
						"description": "Enumerate endpoint associated with a particular Device Serial Number that the caller has permission to access\n---\n*Required Request Query Parameters:*\n- `serialNumber.value.text`: Filter endpoints to the device matching the given Device Serial Number (DSN).\n\n**Note:** This call only returns endpoints that are associated with the given DSN. To enumerate endpoints associated with your Amazon Business Account, see [Enumerate endpoints associated with a unit](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#get-all-endpoints).\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#get-endpoints)"
					},
					"response": []
				},
				{
					"name": "Get Device from DSN - Identifier with Details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{Host}}/v2/endpoints?serialNumber.value.text={{DSN}}&expand=all",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v2",
								"endpoints"
							],
							"query": [
								{
									"key": "serialNumber.value.text",
									"value": "{{DSN}}",
									"description": "the Device Serial Number to filter on"
								},
								{
									"key": "expand",
									"value": "all",
									"description": "An attribute (or set of attributes) to include in the response."
								}
							]
						},
						"description": "Enumerate endpoint associated with a particular Device Serial Number that the caller has permission to access\n---\n*Required Request Query Parameters:*\n- `serialNumber.value.text`: Filter endpoints to the device matching the given Device Serial Number (DSN).\n\n**Note:** This call only returns endpoints that are associated with the given DSN. To enumerate endpoints associated with your Amazon Business Account, see [Enumerate endpoints associated with a unit](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#get-all-endpoints).\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#get-endpoints)"
					},
					"response": []
				},
				{
					"name": "Query Endpoint Status from Mac Address",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{Host}}/v2/endpoints?connections.macAddress={{MacAddress}}&features[name:connectivity].properties[name:reachability].value.value=OK",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v2",
								"endpoints"
							],
							"query": [
								{
									"key": "connections.macAddress",
									"value": "{{MacAddress}}",
									"description": "the Device Mac Address"
								},
								{
									"key": "features[name:connectivity].properties[name:reachability].value.value",
									"value": "OK",
									"description": "the Device Connectivity Status"
								}
							]
						},
						"description": "Query an Endpoint Status from its MacAddress\n---\n\nAfter you've called the PUT associatedUnits API and received a 200 code, the process to associate the endpoint with the unit is complete on the cloud side. However, the physical endpoint must complete an automatic reboot to complete the endpoint-to-unit association on the endpoint side. There are no steps required to automatically reboot the endpoint.\n\nTo check if the endpoint has successfully rebooted, you can poll for the connectivity status of the endpoint. We recommend a polling interval of 2 minutes or greater.\n\nWhen this API returns an endpointId, the endpoint has successfully rebooted and reconnected to the network.\n\n*Required Request Query Parameters:*\n- `connections.macAddress`: Filter endpoints to only those endpoints that match a particular Mac Address\n- `connections.macAddress`: Filter endpoints to only those endpoints that have an online connectivity status (`OK`)\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#query-endpoint-status)"
					},
					"response": []
				}
			],
			"description": "With this API, you can enumerate the devices owned by your Amazon Business account; view and change settings; and associate endpoints with specific rooms.\n---",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Device Settings",
			"item": [
				{
					"name": "Speaker",
					"item": [
						{
							"name": "Get Speaker Settings",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/features/speaker",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"endpoints",
										"{{EndpointId}}",
										"features",
										"speaker"
									]
								},
								"description": "Retrieve speaker-feature properties (e.g volume) and their corresponding values of the specified endpoint.\n---\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#get-featuresspeaker)"
							},
							"response": []
						},
						{
							"name": "Set Volume",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"payload\": {\n        \"volume\": 40\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/features/speaker/setVolume",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"endpoints",
										"{{EndpointId}}",
										"features",
										"speaker",
										"setVolume"
									]
								},
								"description": "Set speaker volume to the specified value on the specified endpoint.\n---\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n*Required Request Body Parameters:*\n- `volume`: The absolute volume to set endpoint's speaker volume to. Valid range is 0 to 100.\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#post-featuresspeaker)"
							},
							"response": []
						},
						{
							"name": "Adjust Volume",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"payload\": {\n        \"volumeDelta\": -60\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/features/speaker/adjustVolume",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"endpoints",
										"{{EndpointId}}",
										"features",
										"speaker",
										"adjustVolume"
									]
								},
								"description": "Adjust speaker volume by the specified value on the specified endpoint.\n---\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n*Required Request Body Parameters:*\n- `volumeDelta`: The relative volume to adjust the endpoint's speaker volume by. Valid range is -100 to 100. If the volume of the endpoint is already set to '20', and adjustVolume operation is invoked to adjust the endpoint volume by '-30', the endpoint volume is set to 0. Similarly, if the volume of the endpoint is already set to '20' and adjustVolume operation is invoked to adjust the endpoint volume by '90', the endpoint volume is set to 100\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#post-featuresspeaker)"
							},
							"response": []
						}
					]
				},
				{
					"name": "Address",
					"item": [
						{
							"name": "Get Address",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/settings/address",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"endpoints",
										"{{EndpointId}}",
										"settings",
										"address"
									]
								},
								"description": "Get the address where an endpoint is located. \n---\n\nAlexa uses this setting for features like Local Search and Weather.\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#get-address-setting)"
							},
							"response": []
						},
						{
							"name": "Set Address",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"address\": {\n        \"addressLine1\": \"221 Baker Ave\",\n        \"addressLine2\": \"\",\n        \"addressLine3\": \"\",\n        \"city\": \"Sunnyvale\",\n        \"stateOrRegion\": \"California\",\n        \"districtOrCounty\": \"\",\n        \"postalCode\": \"94085\",\n        \"countryCode\": \"US\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v2/endpoints/{{endpointId}}/settings/address",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"endpoints",
										"{{endpointId}}",
										"settings",
										"address"
									]
								},
								"description": "Set the address where an endpoint is located. \n---\n\nAlexa uses this setting for features like Local Search and Weather.\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n*Required Request Body Parameters:*\n- `address`: The device address object\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#post-address-setting)"
							},
							"response": []
						}
					]
				},
				{
					"name": "Do Not Disturb",
					"item": [
						{
							"name": "Get Do Not Disturb Mode",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/settings/Alexa.DoNotDisturb.doNotDisturb",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"endpoints",
										"{{EndpointId}}",
										"settings",
										"Alexa.DoNotDisturb.doNotDisturb"
									]
								},
								"description": "Get the DoNotDisturb setting. \n---\n\nThis setting prevents notifications and proactive experiences (calls, etc.) from disturbing the user.\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#get-donotdisturb-setting)"
							},
							"response": []
						},
						{
							"name": "Set Do Not Disturb Mode",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "true",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/settings/Alexa.DoNotDisturb.doNotDisturb",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"endpoints",
										"{{EndpointId}}",
										"settings",
										"Alexa.DoNotDisturb.doNotDisturb"
									]
								},
								"description": "Update the DoNotDisturb setting. \n---\n\nThis setting prevents notifications and proactive experiences (calls, etc.) from disturbing the user.\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n*Required Request Body Value:*\n- A Boolean value: `true` to enable the DoNotDisturb setting, or `false` otherwise.\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#put-donotdisturb-setting)"
							},
							"response": []
						}
					]
				},
				{
					"name": "Locales",
					"item": [
						{
							"name": "Get Locales",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/settings/System.locales",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"endpoints",
										"{{EndpointId}}",
										"settings",
										"System.locales"
									]
								},
								"description": "Get the user's preferred locales.\n---\n\nIn the context of an Alexa device, this setting controls which languages the Alexa-enabled device is expected to understand and respond with.\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#get-locales-setting)"
							},
							"response": []
						},
						{
							"name": "Set Locales",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"en-US\", \"fr-FR\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/settings/System.locales",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"endpoints",
										"{{EndpointId}}",
										"settings",
										"System.locales"
									]
								},
								"description": "Update the locale setting of the endpoint\n---\n\nIn the context of an Alexa device, this setting controls which languages the Alexa-enabled device is expected to understand and respond with.\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n*Required Request Body Value:*\n- List of locale strings. Specify at least one and no more than two locales. The first element in the list specifies the preferred locale. The following locales are supported: `de-DE`, `en-AU`, `en-CA`, `en-GB`, `en-IN`, `en-US`, `es-ES`, `es-MX`, `fr-FR`, `fr-CA`, `hi-IN`, `it-IT`, `ja-JP`, `pt-BR`. \n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#put-locales-setting)"
							},
							"response": []
						}
					]
				},
				{
					"name": "Wake Word",
					"item": [
						{
							"name": "Get Wake Word",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/settings/SpeechRecognizer.wakeWords",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"endpoints",
										"{{EndpointId}}",
										"settings",
										"SpeechRecognizer.wakeWords"
									]
								},
								"description": "Get the WakeWords setting.\n---\n\nThis setting controls what alternative wake words the user can say to wake up Alexa.\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#get-wakewords-setting)"
							},
							"response": []
						},
						{
							"name": "Set Wake Word",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": " [\"AMAZON\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/settings/SpeechRecognizer.wakeWords",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"endpoints",
										"{{EndpointId}}",
										"settings",
										"SpeechRecognizer.wakeWords"
									]
								},
								"description": "Update the WakeWords setting.\n---\n\nThis setting controls what alternative wake words the user can say to wake up Alexa.\n\nThe supported wake words are: `ALEXA`, `AMAZON`, `COMPUTER`, and `ECHO`. \n\nCurrently you can only specify one wake word at a time. \n\nNot all devices support all wake words.\n\nNot all locales support all wake words (e.g `COMPUTER` is not supported in `fr-FR`)\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n*Required Request Body Value:*\n- List of wake words, for example, [\"ALEXA\"].\n\n\n**Note:** Before you can update the `WakeWords` setting for a device, you must set the `Locales` setting. \n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#put-wakewords-setting)"
							},
							"response": []
						}
					]
				},
				{
					"name": "Wake Word Confirmation",
					"item": [
						{
							"name": "Get Wake Word Confirmation",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/settings/SpeechRecognizer.wakeWordConfirmation",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"endpoints",
										"{{EndpointId}}",
										"settings",
										"SpeechRecognizer.wakeWordConfirmation"
									]
								},
								"description": "Get the WakeWord Confirmation setting.\n---\n\n This setting enables the user to specify whether they want an audible tone to play in addition to the visual indicator when Alexa detects the wake word. The tone indicates that Alexa is now listening and capturing the request.\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n---\n\n[see Online Doc](https://developer.integ.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#get-wakewordconfirmation-setting)"
							},
							"response": []
						},
						{
							"name": "Set Wake Word Confirmation",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": " \"TONE\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/settings/SpeechRecognizer.wakeWordConfirmation",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"endpoints",
										"{{EndpointId}}",
										"settings",
										"SpeechRecognizer.wakeWordConfirmation"
									]
								},
								"description": "Update the WakeWord Confirmation setting.\n---\n\nThis setting enables the user to specify whether they want an audible tone to play in addition to the visual indicator when Alexa detects the wake word. The tone indicates that Alexa is now listening and capturing the request.\n\nThe supported wake words confirmation settings are: `NONE` and `TONE`. \n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n*Required Request Body Value:*\n- A string containing the desired speech confirmation setting. Alexa supported speech confirmation settings are `\"TONE\"` and `\"NONE\"`.\n \n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#put-wakewords-setting)"
							},
							"response": []
						}
					]
				},
				{
					"name": "Speech Confirmation",
					"item": [
						{
							"name": "Get Speech Confirmation",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/settings/SpeechRecognizer.speechConfirmation",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"endpoints",
										"{{EndpointId}}",
										"settings",
										"SpeechRecognizer.speechConfirmation"
									]
								},
								"description": "Get the end-of-request sound.\n---\n\nThis setting allows the user to specify whether they want a short tone to play at the end of their request to Alexa to indicate that Alexa has finished listening to and capturing the request.\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#get-speechconfirmation-setting)"
							},
							"response": []
						},
						{
							"name": "Set Speech Confirmation",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"NONE\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/settings/SpeechRecognizer.speechConfirmation",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"endpoints",
										"{{EndpointId}}",
										"settings",
										"SpeechRecognizer.speechConfirmation"
									]
								},
								"description": "Update the end-of-request sound setting.\n---\n\nThis setting allows the user to specify whether they want a short tone to play at the end of their request to Alexa to indicate that Alexa has finished listening to and capturing the request.\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n*Required Request Body Value:*\n- A string containing the desired speech confirmation setting. Alexa supported speech confirmation settings are `\"TONE\"` and `\"NONE\"`.\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#put-speechconfirmation-setting)"
							},
							"response": []
						}
					]
				},
				{
					"name": "Error Suppression",
					"item": [
						{
							"name": "Get Error Suppression",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/settings/Alexa.ManagedDevice.Settings.errorSuppression",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"endpoints",
										"{{EndpointId}}",
										"settings",
										"Alexa.ManagedDevice.Settings.errorSuppression"
									]
								},
								"description": "Get the list of error suppressions.\n---\n\nThis setting controls whether the device plays error audio cues (brief, distinctive sounds) for certain errors.\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#get-errorsuppression-setting)"
							},
							"response": []
						},
						{
							"name": "Set Error Suppression",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"CONNECTIVITY\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/settings/Alexa.ManagedDevice.Settings.errorSuppression",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"endpoints",
										"{{EndpointId}}",
										"settings",
										"Alexa.ManagedDevice.Settings.errorSuppression"
									]
								},
								"description": "Update the list of error suppressions.\n---\n\nThis setting controls whether the device plays error audio cues (brief, distinctive sounds) for certain errors.\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n*Required Request Query Parameters:*\n- The list of error suppressions. Currently the only supported value is `[\"CONNECTIVITY\"]`. An empty list shows that no errors are to be suppressed.\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#put-errorsuppression-setting)"
							},
							"response": []
						}
					]
				},
				{
					"name": "Setup Mode Privileges",
					"item": [
						{
							"name": "Get Setup Mode Privileges",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/settings/Alexa.ManagedDevice.Settings.setupModePrivileges",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"endpoints",
										"{{EndpointId}}",
										"settings",
										"Alexa.ManagedDevice.Settings.setupModePrivileges"
									]
								},
								"description": "Get the list of setup mode privileges.\n---\n\nThis setting controls the end user's ability to put a device into configuration mode via the setup mode process (for example, by long-pressing the Action button on a device).\n\nAlexa supported list of setup mode privileges is, `[\"ALL_SETTINGS\"]`. `[\"ALL_SETTINGS\"]` allows the end user to put a device into setup mode. An empty list (`[]`) shows that setup mode is disabled.\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n**Note:** Setup mode is disabled when the endpoint is associated with a unit within a property. It's enabled when the endpoint is associated with the caller's default unit or when it's not associated with any unit.\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#get-setupmodeprivileges-setting)"
							},
							"response": []
						}
					]
				},
				{
					"name": "Follow Up",
					"item": [
						{
							"name": "Get FollowUp Mode",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/settings/SpeechRecognizer.FollowUp.mode",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"endpoints",
										"{{EndpointId}}",
										"settings",
										"SpeechRecognizer.FollowUp.mode"
									]
								},
								"description": "Get the follow-up mode setting\n---\n\nThis setting enables Alexa to listen for a subsequent request from the user without requiring the user to say the wake word.\n\nValid values: `true` or `false`\n\n*Required Request Path Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#get-followup-setting)"
							},
							"response": []
						},
						{
							"name": "Set FollowUp Mode",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "true",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/settings/Alexa.ManagedDevice.Settings.maximumVolumeLimit",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"endpoints",
										"{{EndpointId}}",
										"settings",
										"Alexa.ManagedDevice.Settings.maximumVolumeLimit"
									]
								},
								"description": "Update the follow-up mode setting\n---\n\nThis setting enables Alexa to listen for a subsequent request from the user without requiring the user to say the wake word.\n\nValid values: `true` or `false`\n\n*Required Request Path Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n\n*Required Request Body:*\n- `true` or `false`\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#put-followup-setting)"
							},
							"response": []
						}
					]
				},
				{
					"name": "Speaking Rate",
					"item": [
						{
							"name": "Get Speaking Rate",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/settings/SpeechSynthesizer.speakingRate",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"endpoints",
										"{{EndpointId}}",
										"settings",
										"SpeechSynthesizer.speakingRate"
									]
								},
								"description": "Get the speaking rate setting.\n---\n\nThis setting enables to adjust the speaking rate of Alexa to either a faster or slower pace.\n\nValid values: `0.75`, `0.85`, `1`, `1.25`, `1.5`, `1.75`, and `2`\n\n*Required Request Path Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#get-speaking-rate-setting)"
							},
							"response": []
						},
						{
							"name": "Set Speaking Rate",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "0.75",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/settings/SpeechSynthesizer.speakingRate",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"endpoints",
										"{{EndpointId}}",
										"settings",
										"SpeechSynthesizer.speakingRate"
									]
								},
								"description": "Set the speaking rate setting.\n---\n\nThis setting enables to adjust the speaking rate of Alexa to either a faster or slower pace.\n\nValid values: `0.75`, `0.85`, `1`, `1.25`, `1.5`, `1.75`, and `2`. The default setting is `1`.\n\n*Required Request Path Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n*Required Request Body:*\nThe new speaking rate setting.\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#put-speaking-rate-setting)"
							},
							"response": []
						}
					]
				},
				{
					"name": "Max. Volume Limit",
					"item": [
						{
							"name": "Get Maximum Volume",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/settings/Alexa.ManagedDevice.Settings.maximumVolumeLimit",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"endpoints",
										"{{EndpointId}}",
										"settings",
										"Alexa.ManagedDevice.Settings.maximumVolumeLimit"
									]
								},
								"description": "Get the maximum volume limit.\n---\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#get-maximumvolumelimit-setting)"
							},
							"response": []
						},
						{
							"name": "Set Maximum Volume",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "80",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/settings/Alexa.ManagedDevice.Settings.maximumVolumeLimit",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"endpoints",
										"{{EndpointId}}",
										"settings",
										"Alexa.ManagedDevice.Settings.maximumVolumeLimit"
									]
								},
								"description": "Update the maximum volume limit.\n---\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n*Required Request Body Value:*\n- An integer value from 0 to 100, inclusive.\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#put-maximumvolumelimit-setting)"
							},
							"response": []
						}
					]
				},
				{
					"name": "TimeZone",
					"item": [
						{
							"name": "Get TimeZone",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/settings/System.timeZone",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"endpoints",
										"{{EndpointId}}",
										"settings",
										"System.timeZone"
									]
								},
								"description": "Get the time zone.\n---\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#get-timezone-setting)"
							},
							"response": []
						},
						{
							"name": "Set TimeZone",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"Europe/Paris\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/settings/System.timeZone",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"endpoints",
										"{{EndpointId}}",
										"settings",
										"System.timeZone"
									]
								},
								"description": "Update the time zone.\n---\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n*Required Request Body Value:*\n- A time zone string, following the Olson format defined in the [Timezone Database](https://www.iana.org/time-zones). For example: `\"Europe/Paris\"`.\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#put-timezone-setting)"
							},
							"response": []
						}
					]
				},
				{
					"name": "Temperature Unit",
					"item": [
						{
							"name": "Get Temperature Unit",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/settings/System.temperatureUnit",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"endpoints",
										"{{EndpointId}}",
										"settings",
										"System.temperatureUnit"
									]
								},
								"description": "Get the temperature scale (Celsius or Fahrenheit) setting.\n---\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#get-temperatureunit-setting)"
							},
							"response": []
						},
						{
							"name": "Set Temperature Unit",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"CELSIUS\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/settings/System.temperatureUnit",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"endpoints",
										"{{EndpointId}}",
										"settings",
										"System.temperatureUnit"
									]
								},
								"description": "Set the temperature scale (Celsius or Fahrenheit) setting.\n---\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n*Required Request Body Value:*\n- A temperature string: `\"CELSIUS\"` or `\"FAHRENHEIT\"`.\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#put-temperatureunit-setting)"
							},
							"response": []
						}
					]
				},
				{
					"name": "Distance Unit",
					"item": [
						{
							"name": "Get Distance Unit",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/settings/System.distanceUnits",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"endpoints",
										"{{EndpointId}}",
										"settings",
										"System.distanceUnits"
									]
								},
								"description": "Get the distance units (Metric or Imperial) setting.\n---\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#get-distanceunits-setting)"
							},
							"response": []
						},
						{
							"name": "Set Distance Unit",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"METRIC\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/settings/System.distanceUnits",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"endpoints",
										"{{EndpointId}}",
										"settings",
										"System.distanceUnits"
									]
								},
								"description": "Update the distance units (Metric or Imperial) setting.\n---\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n*Required Request Body Value:*\n- A temperature string: `\"METRIC\"` or `\"IMPERIAL\"`.\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#put-distanceunits-setting)"
							},
							"response": []
						}
					]
				},
				{
					"name": "TimeFormat",
					"item": [
						{
							"name": "Get Time Format",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/settings/Alexa.DataFormat.Time.timeFormat",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"endpoints",
										"{{EndpointId}}",
										"settings",
										"Alexa.DataFormat.Time.timeFormat"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set Time Format",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"24_HOURS\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/settings/Alexa.DataFormat.Time.timeFormat",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"endpoints",
										"{{EndpointId}}",
										"settings",
										"Alexa.DataFormat.Time.timeFormat"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Accessibility (Multimodal)",
					"item": [
						{
							"name": "Alexa Captions",
							"item": [
								{
									"name": "Get Alexa Captions Enablement",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/settings/Accessibility.Captions.AlexaCaptions.enablement",
											"protocol": "https",
											"host": [
												"{{Host}}"
											],
											"path": [
												"v2",
												"endpoints",
												"{{EndpointId}}",
												"settings",
												"Accessibility.Captions.AlexaCaptions.enablement"
											]
										},
										"description": "Get the Alexa caption setting.\n---\n\nThis setting controls whether a multimedia device displays the following information:\n\n- Alexa captions, which provide the text version of what Alexa speaks via SpeechSynthesizer.\n- The captions that accompany [AudioPlayer directives](https://developer.amazon.com/en-US/docs/alexa/custom-skills/audioplayer-interface-reference.html).\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#get-alexacaptions-setting)"
									},
									"response": []
								},
								{
									"name": "Set Alexa Captions",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "\"ENABLED\"",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/settings/Accessibility.Captions.AlexaCaptions.enablement",
											"protocol": "https",
											"host": [
												"{{Host}}"
											],
											"path": [
												"v2",
												"endpoints",
												"{{EndpointId}}",
												"settings",
												"Accessibility.Captions.AlexaCaptions.enablement"
											]
										},
										"description": "Update the Alexa caption setting.\n---\n\nThis setting controls whether a multimedia device displays the following information:\n\n- Alexa captions, which provide the text version of what Alexa speaks via SpeechSynthesizer.\n- The captions that accompany [AudioPlayer directives](https://developer.amazon.com/en-US/docs/alexa/custom-skills/audioplayer-interface-reference.html).\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n*Required Request Body Value:*\n- A string representing the desired value of this setting: `\"ENABLED\"` or `\"DISABLED\"`.\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#put-alexacaptions-setting)"
									},
									"response": []
								}
							]
						},
						{
							"name": "Closed Captions",
							"item": [
								{
									"name": "Get Closed Captions Enablement (for Video Content)",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/settings/Accessibility.Captions.ClosedCaptions.enablement",
											"protocol": "https",
											"host": [
												"{{Host}}"
											],
											"path": [
												"v2",
												"endpoints",
												"{{EndpointId}}",
												"settings",
												"Accessibility.Captions.ClosedCaptions.enablement"
											]
										},
										"description": "Get the closed caption setting.\n---\n\nThis setting controls whether a multimedia device displays closed captions for video content.\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#get-closedcaptions-setting)"
									},
									"response": []
								},
								{
									"name": "Set Closed Captions",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "\"ENABLED\"",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/settings/Accessibility.Captions.ClosedCaptions.enablement",
											"protocol": "https",
											"host": [
												"{{Host}}"
											],
											"path": [
												"v2",
												"endpoints",
												"{{EndpointId}}",
												"settings",
												"Accessibility.Captions.ClosedCaptions.enablement"
											]
										},
										"description": "Update the closed caption setting.\n---\n\nThis setting controls whether a multimedia device displays closed captions for video content.\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n*Required Request Body Value:*\n- A string representing the desired value of this setting: `\"ENABLED\"` or `\"DISABLED\"`.\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#put-closedcaptions-setting)"
									},
									"response": []
								}
							]
						},
						{
							"name": "Magnifier",
							"item": [
								{
									"name": "Get Magnifier Enablement",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/settings/Accessibility.Display.Magnifier.enablement",
											"protocol": "https",
											"host": [
												"{{Host}}"
											],
											"path": [
												"v2",
												"endpoints",
												"{{EndpointId}}",
												"settings",
												"Accessibility.Display.Magnifier.enablement"
											]
										},
										"description": "Get the device magnifier setting.\n---\n\nThis setting gives the device user the ability to enlarge items on the screen to improve readability.\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#get-magnifier-setting)"
									},
									"response": []
								},
								{
									"name": "Set Magnifier",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "\"ENABLED\"",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/settings/Accessibility.Display.Magnifier.enablement",
											"protocol": "https",
											"host": [
												"{{Host}}"
											],
											"path": [
												"v2",
												"endpoints",
												"{{EndpointId}}",
												"settings",
												"Accessibility.Display.Magnifier.enablement"
											]
										},
										"description": "Update the device magnifier setting\n---\n\nThis setting gives the device user the ability to enlarge items on the screen to improve readability.\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n*Required Request Body Value:*\n- A string representing the desired value of this setting: `\"ENABLED\"` or `\"DISABLED\"`.\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#put-magnifier-setting)"
									},
									"response": []
								}
							]
						},
						{
							"name": "Color Inversion",
							"item": [
								{
									"name": "Get Color Inversion Enablement",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/settings/Accessibility.Display.ColorInversion.enablement",
											"protocol": "https",
											"host": [
												"{{Host}}"
											],
											"path": [
												"v2",
												"endpoints",
												"{{EndpointId}}",
												"settings",
												"Accessibility.Display.ColorInversion.enablement"
											]
										},
										"description": "Get the screen color inversion setting.\n---\n\nThis setting gives the device user the ability to invert the screen display colors to improve readability.\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#get-colorinversion-setting)"
									},
									"response": []
								},
								{
									"name": "Set Color Inversion",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "\"ENABLED\"",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/settings/Accessibility.Display.ColorInversion.enablement",
											"protocol": "https",
											"host": [
												"{{Host}}"
											],
											"path": [
												"v2",
												"endpoints",
												"{{EndpointId}}",
												"settings",
												"Accessibility.Display.ColorInversion.enablement"
											]
										},
										"description": "Update the screen color inversion setting.\n---\n\nThis setting gives the device user the ability to invert the screen display colors to improve readability.\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n*Required Request Body Value:*\n- A string representing the desired value of this setting: `\"ENABLED\"` or `\"DISABLED\"`.\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#put-colorinversion-setting)"
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "SmartHome",
					"item": [
						{
							"name": "Power",
							"item": [
								{
									"name": "Get Power State",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/features/power",
											"protocol": "https",
											"host": [
												"{{Host}}"
											],
											"path": [
												"v2",
												"endpoints",
												"{{EndpointId}}",
												"features",
												"power"
											]
										},
										"description": "Get the endpoint color property\n---\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#query-power-state)"
									},
									"response": []
								},
								{
									"name": "Turn On Endpoint Power",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/features/power/turnOn",
											"protocol": "https",
											"host": [
												"{{Host}}"
											],
											"path": [
												"v2",
												"endpoints",
												"{{EndpointId}}",
												"features",
												"power",
												"turnOn"
											]
										},
										"description": "Turn on the endpoint power\n---\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n- `operation`: The operation to perform: turnOn\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#set-power-state)"
									},
									"response": []
								},
								{
									"name": "Turn Off Endpoint Power",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/features/power/turnOff",
											"protocol": "https",
											"host": [
												"{{Host}}"
											],
											"path": [
												"v2",
												"endpoints",
												"{{EndpointId}}",
												"features",
												"power",
												"turnOff"
											]
										},
										"description": "Turn off the endpoint power\n---\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n- `operation`: The operation to perform: turnOff\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#set-power-state)"
									},
									"response": []
								}
							]
						},
						{
							"name": "Brightness",
							"item": [
								{
									"name": "Get Brightness",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/features/brightness",
											"protocol": "https",
											"host": [
												"{{Host}}"
											],
											"path": [
												"v2",
												"endpoints",
												"{{EndpointId}}",
												"features",
												"brightness"
											]
										},
										"description": "Get the endpoint brightness level.\n---\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#query-brightness-state)"
									},
									"response": []
								},
								{
									"name": "Set Brightness",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"payload\": {\n        \"brightness\": 50\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/features/brightness/setBrightness",
											"protocol": "https",
											"host": [
												"{{Host}}"
											],
											"path": [
												"v2",
												"endpoints",
												"{{EndpointId}}",
												"features",
												"brightness",
												"setBrightness"
											]
										},
										"description": "Update the brightness level of the endpoint\n---\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n- `operation`: The operation to perform: setBrightness\n\n*Required Request Body Value:*\n- `payload.brightness`: Brightness value. Valid values are from 0 to 100, inclusive. \n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#set-brightness-state)"
									},
									"response": []
								},
								{
									"name": "Adjust Brightness",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"payload\": {\n        \"brightnessDelta\": 10\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/features/brightness/adjustBrightness",
											"protocol": "https",
											"host": [
												"{{Host}}"
											],
											"path": [
												"v2",
												"endpoints",
												"{{EndpointId}}",
												"features",
												"brightness",
												"adjustBrightness"
											]
										},
										"description": "Update the brightness level of the endpoint\n---\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n- `operation`: The operation to perform: adjustBrightness\n\n*Required Request Body Value:*\n- `payload.brightnessDelta`: Brightness delta value. Valid values are from -100 to 100, inclusive. \n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#set-brightness-state)"
									},
									"response": []
								}
							]
						},
						{
							"name": "Color",
							"item": [
								{
									"name": "Get Color",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/features/color",
											"protocol": "https",
											"host": [
												"{{Host}}"
											],
											"path": [
												"v2",
												"endpoints",
												"{{EndpointId}}",
												"features",
												"color"
											]
										},
										"description": "Get the endpoint color property\n---\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#query-color-state)"
									},
									"response": []
								},
								{
									"name": "Set Color",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"payload\": {\n        \"color\": {\n            \"hue\": 20,\n            \"saturation\": 0.75,\n            \"brightness\": 0.34\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/features/color/setColor",
											"protocol": "https",
											"host": [
												"{{Host}}"
											],
											"path": [
												"v2",
												"endpoints",
												"{{EndpointId}}",
												"features",
												"color",
												"setColor"
											]
										},
										"description": "Set the endpoint color property\n---\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n- `operation`: The operation to perform: setColor\n\n*Required Request Body Value:*\n- `payload.color.hue`: Hue value. \n- `payload.color.saturation`: Saturation value\n- `payload.color.brightness`: Brightness value\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#set-color-state)"
									},
									"response": []
								}
							]
						},
						{
							"name": "Color Temperature",
							"item": [
								{
									"name": "Get Color Temperature",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/features/colorTemperature",
											"protocol": "https",
											"host": [
												"{{Host}}"
											],
											"path": [
												"v2",
												"endpoints",
												"{{EndpointId}}",
												"features",
												"colorTemperature"
											]
										},
										"description": "Get the endpoint color temperature property\n---\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#query-colortemperature-state)"
									},
									"response": []
								},
								{
									"name": "Set Color Temperature",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"payload\": {\n        \"colorTemperatureInKelvin\": 2700\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/features/colorTemperature/setColorTemperature",
											"protocol": "https",
											"host": [
												"{{Host}}"
											],
											"path": [
												"v2",
												"endpoints",
												"{{EndpointId}}",
												"features",
												"colorTemperature",
												"setColorTemperature"
											]
										},
										"description": "Set the endpoint color temperature property\n---\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n- `operation`: The operation to perform: setColorTemperature\n\n*Required Request Body Value:*\n- `payload.colorTemperatureInKelvin`: Color temperature value. From 1000 to 10000, inclusive.\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#set-colortemperature-state)"
									},
									"response": []
								},
								{
									"name": "Increase Color Temperature",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"payload\": {\n        \"colorTemperatureInKelvin\": 2700\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/features/colorTemperature/increaseColorTemperature",
											"protocol": "https",
											"host": [
												"{{Host}}"
											],
											"path": [
												"v2",
												"endpoints",
												"{{EndpointId}}",
												"features",
												"colorTemperature",
												"increaseColorTemperature"
											]
										},
										"description": "Increase color temperature property for an endpoint\n---\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n- `operation`: The operation to perform: setColorTemperature\n\n*Required Request Body Value:*\n- `payload.colorTemperatureInKelvin`: Color temperature value. From 1000 to 10000, inclusive.\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#set-colortemperature-state)"
									},
									"response": []
								},
								{
									"name": "Decrease Color Temperature",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"payload\": {\n        \"colorTemperatureInKelvin\": 2700\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/features/colorTemperature/decreaseColorTemperature",
											"protocol": "https",
											"host": [
												"{{Host}}"
											],
											"path": [
												"v2",
												"endpoints",
												"{{EndpointId}}",
												"features",
												"colorTemperature",
												"decreaseColorTemperature"
											]
										},
										"description": "Decrease the endpoint color temperature property\n---\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n- `operation`: The operation to perform: setColorTemperature\n\n*Required Request Body Value:*\n- `payload.colorTemperatureInKelvin`: Color temperature value. From 1000 to 10000, inclusive.\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#set-colortemperature-state)"
									},
									"response": []
								}
							]
						},
						{
							"name": "Temperature Sensor",
							"item": [
								{
									"name": "Get Temperature",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/features/temperatureSensor",
											"protocol": "https",
											"host": [
												"{{Host}}"
											],
											"path": [
												"v2",
												"endpoints",
												"{{EndpointId}}",
												"features",
												"temperatureSensor"
											]
										},
										"description": "Get the endpoint temperature sensor\n---\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#query-temperatureSensor-state)"
									},
									"response": []
								}
							]
						},
						{
							"name": "Thermostat",
							"item": [
								{
									"name": "Get Thermostat Value",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/features/thermostat",
											"protocol": "https",
											"host": [
												"{{Host}}"
											],
											"path": [
												"v2",
												"endpoints",
												"{{EndpointId}}",
												"features",
												"thermostat"
											]
										},
										"description": "Get the endpoint thermostat value\n---\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#query-thermostat-state)"
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Multiple Settings",
					"item": [
						{
							"name": "Get Multiple Settings",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/settings?keys=System.temperatureUnit,System.distanceUnits",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"endpoints",
										"{{EndpointId}}",
										"settings"
									],
									"query": [
										{
											"key": "keys",
											"value": "System.temperatureUnit,System.distanceUnits"
										}
									]
								},
								"description": "Get the values of multiple settings at once\n---\n\n*Required Request Path Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n*Required Request Query Parameters:*\n- `keys`: Comma separated setting names to query.\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#get-multiple-settings)"
							},
							"response": []
						}
					]
				},
				{
					"name": "Bluetooth",
					"item": [
						{
							"name": "Get Bluetooth Features",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/features/bluetooth",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"endpoints",
										"{{EndpointId}}",
										"features",
										"bluetooth"
									]
								},
								"description": "Gets Bluetooth feature properties, operations, and the configuration.\n---\n\n\n*Required Request Query Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-bluetooth-api.html#get-bluetooth-features)"
							},
							"response": []
						},
						{
							"name": "Unpair Bluetooth Devices",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/features/bluetooth/unpair",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"endpoints",
										"{{EndpointId}}",
										"features",
										"bluetooth",
										"unpair"
									]
								},
								"description": "Unpairs all of the Bluetooth devices from the Alexa-enabled device.\n---\n\n*Required Request Query Parameters:*\nNone\n\n*Required Request Body Parameters:*\nNone\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-bluetooth-api.html#unpair-bluetooth-devices)"
							},
							"response": []
						}
					]
				}
			],
			"description": "With this API, you can query and update the values of different settings for endpoints owned by your Amazon Business account or your units (properties, room types, rooms)\n---",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Wifi Management",
			"item": [
				{
					"name": "Save Wifi Configuration",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"wifiConfigurations\": [{\n        \"credentialConfiguration\": {\n            \"privateSharedKey\": \"\\\"{{WifiPassword}}\\\"\"\n        },\n        \"ssid\": \"\\\"{{WifiSsid}}\\\"\",\n        \"keyManagement\": \"WPAPSK\"\n    }]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://credential-locker-service.amazon.com/credentiallocker/v2/saveWifiConfigurations",
							"protocol": "https",
							"host": [
								"credential-locker-service.amazon.com"
							],
							"path": [
								"credentiallocker",
								"v2",
								"saveWifiConfigurations"
							]
						},
						"description": "Save Wi-Fi configurations in Amazon Locker for later use with an endpoint.\n---\n*Required Request Body Parameters:*\n- `credentialConfiguration.privateSharedKey`: Private shared key. Must be enclosed in double quotation marks.\n- `ssid`: Wifi configuration network name. Must be enclosed in double quotation marks.\n- `keyManagement`: Wifi configuration security type. Valid values are `NONE` for open networks or `WPAPSK` for password-based Wi-Fi SSIDs.\n\n**Note:** To use these requests, you'll need an LWA token with \"credential_locker::wifi_management\" and \"alexa::enterprise:management\" scopes.\n\n**Warning:** Be mindful of the `Host` to be used to access Wifi APIs.\n`Host` value must be `credential-locker-service.amazon.com`\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#post-savewificonfigurations)"
					},
					"response": []
				},
				{
					"name": "Assign WIfi to Device",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"payload\": {\n        \"wifiConfigurations\": [{\n            \"ssid\": \"\\\"{{WifiSsid}}\\\"\",\n            \"keyManagement\": \"WPAPSK\"\n        }]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/features/connectivity/addOrUpdateWifiConfigurations",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v2",
								"endpoints",
								"{{EndpointId}}",
								"features",
								"connectivity",
								"addOrUpdateWifiConfigurations"
							]
						},
						"description": "Associate saved Wi-Fi configurations with an endpoint.\n---\n\n*Required Request Path Parameters:*\n- `endpointId`: The endpoint ID returned by the [Enumerate endpoints](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#enumerate-endpoints) call.\n\n*Required Request Body Parameters:*\n- `ssid`: Wifi configuration network name. Must be enclosed in double quotation marks. Must be the same value used in the call to POST saveWifiConfigurations.\n- `keyManagement`: Wifi configuration security type. Must be the same value used in the call to POST saveWifiConfigurations.\n\n**Note:** You can associate up to 32 Wi-Fi configurations with each endpoint.\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#post-addorupdatewificonfigurations)"
					},
					"response": []
				},
				{
					"name": "Get Wifi Installation Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/features/connectivity/addOrUpdateWifiConfigurations/submittedOperations/{{WifiOperationId}}",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v2",
								"endpoints",
								"{{EndpointId}}",
								"features",
								"connectivity",
								"addOrUpdateWifiConfigurations",
								"submittedOperations",
								"{{WifiOperationId}}"
							]
						},
						"description": "Get the status of an `addOrUpdateWifiConfigurations` operation.\n---\n\n*Required Request Path Parameters:*\n- `endpointId`: The endpoint ID. Must be the same ID that you used in the call to POST `addOrUpdateWiFiConfigurations`.\n- `operationId`: The operation ID. Must be the `submittedOperationId` value returned by the POST `addOrUpdateWifiConfigurations` call\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#get-wifi-installation-status)"
					},
					"response": []
				}
			],
			"description": "Manage Wi-Fi configuration for Alexa endpoints and track status.\n---",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Notifications",
			"item": [
				{
					"name": "Rotating Cards",
					"item": [
						{
							"name": "List Campaigns",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v1/proactive/campaigns",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"proactive",
										"campaigns"
									]
								},
								"description": "List Campaigns created by the current profile\n---\n\nCampaigns Suggestion Variants are also known as Rotating Cards.\n\n**Note:** Only the campaigns created using the same LWA Security Profile can be listed. When using different LWA Security Profile, you cannot list Campaigns created by another Profile having access to the same ASP Organization\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-proactive-suggestion-api.html#list-campaigns)"
							},
							"response": []
						},
						{
							"name": "Query Campaigns",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"query\": {\n        \"and\": [\n            {\n                \"or\": [\n                    {\n                        \"match\": {\n                            \"targeting.values.id\": \"amzn1.alexa.unit.did.{unitId1}\"\n                        }\n                    },\n                    {\n                        \"match\": {\n                            \"targeting.values.id\": \"amzn1.alexa.unit.did.{unitId2}\"\n                        }\n                    }\n                ]\n            },\n            {\n                \"match\": {\n                    \"targeting.type\": \"UNITS\"\n                }\n            }\n        ]\n    },\n    \"paginationContext\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v1/proactive/campaigns/query",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"proactive",
										"campaigns",
										"query"
									]
								},
								"description": "## Queries the campaigns for a list of units.\n\n---\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#deregister-endpoint)"
							},
							"response": []
						},
						{
							"name": "Create Campaigns",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"suggestion\": {\n      \"variants\": [\n         {\n            \"placement\": {\n                \"channel\": \"HOME\"\n            },\n            \"content\": {\n               \"values\": [\n                  {\n                    \"locale\": \"en-US\",\n                    \"document\": {\n                       \"type\": \"Link\",\n                       \"src\": \"doc://alexa/apl/documents/enterprise/suggestions/home/defaultTemplate\"\n                    },\n                    \"datasources\": {\n                       \"displayText\": {\n                            \"title\": \"Pool Party\",\n                            \"body\": \"Happy hour is starting now in the pool area!\"\n                       },\n                       \"background\": {\n                           \"backgroundImageSource\": \"https://www.zephyrus.de/wp-content/uploads/Header-Startseite-1024x465.jpg\"\n                       }\n                    }\n                  }\n                ]\n            }\n        }]\n   },\n   \"targeting\": {\n        \"type\": \"UNITS\",\n        \"values\": [\n            {\n                \"id\": \"{{UnitId}}\"\n            }\n        ]\n   },\n   \"scheduling\": {\n      \"activationWindow\": {\n\n      }\n   }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v1/proactive/campaigns",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"proactive",
										"campaigns"
									]
								},
								"description": "Creates a Campaign that renders the content as a suggestion to a targeted Unit.\n---\n\n\n**Note:** a Campaign can contain max. one variant per locale. \n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-proactive-suggestion-api.html#create-campaign)"
							},
							"response": []
						},
						{
							"name": "Read Card",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v1/proactive/campaigns/{{CampaignId}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"proactive",
										"campaigns",
										"{{CampaignId}}"
									]
								},
								"description": "Retrieves a Campaign that you created.\n---\n*Required Request Path Parameters:*\n- `campaignId`: The ID of the campaign to retrieve. This value is returned when you create a campaign.\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-proactive-suggestion-api.html#get-campaign)"
							},
							"response": []
						},
						{
							"name": "Delete Card",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v1/proactive/campaigns/{{CampaignId}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"proactive",
										"campaigns",
										"{{CampaignId}}"
									]
								},
								"description": "Deletes a campaign.\n---\n*Required Request Path Parameters:*\n- `campaignId`: The ID of the campaign to delete. This value is returned when you create a campaign.\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-proactive-suggestion-api.html#delete-campaign)"
							},
							"response": []
						}
					]
				},
				{
					"name": "Send Device Annoucement",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"recipients\": [\n    {\n      \"type\": \"Unit\",\n      \"id\": \"{{UnitId}}\"\n    }\n  ],\n  \"notification\": {\n    \"variants\": [\n      {\n        \"type\": \"Announcement\",\n        \"content\": {\n          \"variants\": [\n            {\n              \"type\": \"SpokenText\",\n              \"values\": [\n                {\n                  \"locale\": \"en-US\",\n                  \"text\": \"Happy hour is starting now in the pool area!\"\n                }\n              ]\n            }\n          ]\n        }\n      }\n    ]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{Host}}/v3/notifications",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v3",
								"notifications"
							]
						},
						"description": "Send a voice announcement into a unit\n---\n\nSee more details about the different types of Notification [here](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-notifications-api.html#notification-types)\n\n**Note:** `notification.variants[].type` must be of type `Announcement` to send a voice announcement.\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-notifications-api.html#send-notifications)"
					},
					"response": []
				},
				{
					"name": "Send Device Notification",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"recipients\": [\n    {\n      \"type\": \"Unit\",\n      \"id\": \"{{UnitId}}\"\n    }\n  ],\n  \"notification\": {\n    \"variants\": [\n      {\n        \"type\": \"DeviceNotification\",\n        \"content\": {\n          \"variants\": [\n            {\n              \"type\": \"SpokenText\",\n              \"values\": [\n                {\n                  \"locale\": \"en-US\",\n                  \"text\": \"You received a parcel that can be pickup at the frontdesk. Have a nice day!\"\n                }\n              ]\n            }\n          ]\n        }\n      }\n    ]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{Host}}/v3/notifications",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v3",
								"notifications"
							]
						},
						"description": "Send a voice announcement into a unit\n---\n\nSee more details about the different types of Notification [here](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-notifications-api.html#notification-types)\n\n**Note:** `notification.variants[].type` must be of type `DeviceNotification ` to send a device notification.\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-notifications-api.html#send-notifications)"
					},
					"response": []
				},
				{
					"name": "Send Pinned Cards",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const moment = require('moment');",
									"//let dismissDateTime = moment().add(15, 'minutes').format(\"YYYY-MM-DDTHH:mm:ssZ\")",
									"let dismissDateTime = moment().add(25, 'minutes').toISOString();",
									"console.log(dismissDateTime);",
									"pm.collectionVariables.set('DismissalTime', dismissDateTime);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"recipients\": [\n    {\n      \"type\": \"Unit\",\n      \"id\": \"{{UnitId}}\"\n    }\n  ],\n  \"notification\": {\n    \"variants\": [\n      {\n        \"type\": \"PersistentVisualAlert\",\n            \"content\": {\n                \"variants\": [{\n                    \"type\": \"V0Template\",\n                    \"values\": [{\n                        \"locale\": \"en-US\",\n                        \"document\": {\n                            \"type\": \"Link\",\n                            \"src\": \"doc://alexa/apl/documents/enterprise/notifications/persistentvisualalert/defaultTemplate\"\n                        },\n                        \"datasources\": {\n                            \"displayText\": {\n                                \"title\": \"Continental breakfast\",\n                                \"body\": \"Breakfast is served until 11:30 am!\"\n                            },\n                            \"background\": {\n                                \"backgroundImageSource\": \"https://www.gutekueche.ch/upload/rezept/709/croissants-grundrezept.jpg\"\n                            }\n                        }\n                    }]\n                }]\n            },\n            \"dismissalTime\": \"{{DismissalTime}}\"\n      }\n    ]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{Host}}/v3/notifications",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v3",
								"notifications"
							]
						},
						"description": "Send a Pinned Card into a unit\n---\n\nA Pinned Card is known as a Persistent Visual Alerts. Persistent visual alerts are only for devices with screens. A persistent visual alert is a notification that's displayed on the screen until it expires or the guest or resident dismisses it.\n\n\n\n**Note:** `notification.variants[].type` must be of type `PersistentVisualAlert ` to send a Pinned Card.\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-notifications-api.html#send-notifications)"
					},
					"response": []
				},
				{
					"name": "Query Pinned Cards",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n \"query\": {\n \"and\": [\n {\n \"or\": [\n {\n \"match\": {\n \"recipients.id\": \"amzn1.alexa.unit.did.{unitId1}\"\n }\n },\n {\n \"match\": {\n \"recipients.id\": \"amzn1.alexa.unit.did.{unitId2}\"\n }\n }\n ]\n },\n {\n \"match\": {\n \"recipients.type\": \"Unit\"\n }\n },\n {\n \"match\": {\n \"notification.variants.type\": \"PersistentVisualAlert\"\n }\n }\n ]\n },\n \"paginationContext\": {\n }\n }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{Host}}/v3/notifications/query",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v3",
								"notifications",
								"query"
							]
						},
						"description": "Query Pinned Cards\n---\n\nQueries Persistent Visual Alerts (also known as Pinned Cards) present in a list of units.\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-notifications-api.html#query-persistent-visual-alerts)"
					},
					"response": []
				},
				{
					"name": "Delete All Device Notifications - Single Unit",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://{{Host}}/v3/notifications?recipients.id={{UnitId}}&recipients.type=Unit&notification.variants.type=DeviceNotification",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v3",
								"notifications"
							],
							"query": [
								{
									"key": "recipients.id",
									"value": "{{UnitId}}",
									"description": "Unit ID, in the format amzn1.alexa.unit.did.{unitId}."
								},
								{
									"key": "recipients.type",
									"value": "Unit",
									"description": "Recipient type"
								},
								{
									"key": "notification.variants.type",
									"value": "DeviceNotification",
									"description": "Notification delivery type."
								}
							]
						},
						"description": "Delete Device Notifications by Unit ID\n---\n\nDelete all Devices Notifications associated with a unit.\n\n*Required Request Path Parameters:*\n- `recipients.id`: Unit ID, in the format `amzn1.alexa.unit.did.{unitId}`. to POST saveWifiConfigurations.\n- `recipients.type`: Recipient type: Unit.\n- `notification.variants.type`: Notification delivery type. Valid values: `PersistentVisualAlert` and `DeviceNotification`.\n\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-notifications-api.html#delete-notification-by-unit-id)"
					},
					"response": []
				},
				{
					"name": "Delete All Device Notifications - Multiple Units",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"recipients\" : [\n      {\n          \"type\": \"Unit\",\n          \"id\": \"amzn1.alexa.unit.did.{unitId1}\"\n      },\n      {\n          \"type\": \"Unit\",\n          \"id\": \"amzn1.alexa.unit.did.{unitId2}\"\n      }\n   ],\n  \"notificationTypes\" : [\"DeviceNotification\"]  \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{Host}}/v3/notifications/delete",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v3",
								"notifications",
								"delete"
							]
						},
						"description": "Delete Device Notifications for multiple Unit ID\n---\n\nDelete all Devices Notifications associated with all the specified units.\n\n*Required Request Body Parameters:*\n- `recipients[*].type`: Type of recipient for which to delete notifications. Valid value: `Unit`.\n- `recipients[*].id`: ID of the unit for which to delete notifications. Must be in the format `\"amzn1.alexa.unit.did.{id}\"`.\n- `notificationTypes`: Type of notification to delete. Valid values: `PersistentVisualAlert` and `DeviceNotification`.\n\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-notifications-api.html#delete-all-notifications)"
					},
					"response": []
				},
				{
					"name": "Delete All Pinned Cards - Single Unit",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://{{Host}}/v3/notifications?recipients.id={{UnitId}}&recipients.type=Unit&notification.variants.type=PersistentVisualAlert",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v3",
								"notifications"
							],
							"query": [
								{
									"key": "recipients.id",
									"value": "{{UnitId}}",
									"description": "Unit ID, in the format amzn1.alexa.unit.did.{unitId}"
								},
								{
									"key": "recipients.type",
									"value": "Unit",
									"description": "Recipient type"
								},
								{
									"key": "notification.variants.type",
									"value": "PersistentVisualAlert",
									"description": "Notification delivery type"
								}
							]
						},
						"description": "Delete Pinned Cards by Unit ID\n---\n\nDelete all Persistent Visual Alerts (Pinned Cards) associated with a unit.\n\n\n*Required Request Path Parameters:*\n- `recipients.id`: Unit ID, in the format `amzn1.alexa.unit.did.{unitId}`. to POST saveWifiConfigurations.\n- `recipients.type`: Recipient type: Unit.\n- `notification.variants.type`: Notification delivery type. Valid values: `PersistentVisualAlert` and `DeviceNotification`.\n\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-notifications-api.html#delete-notification-by-unit-id)"
					},
					"response": []
				},
				{
					"name": "Delete All Pinned Cards - Multiple Units",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"recipients\" : [\n      {\n          \"type\": \"Unit\",\n          \"id\": \"amzn1.alexa.unit.did.{unitId1}\"\n      },\n      {\n          \"type\": \"Unit\",\n          \"id\": \"amzn1.alexa.unit.did.{unitId2}\"\n      }\n   ],\n  \"notificationTypes\" : [\"PersistentVisualAlert\"]  \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{Host}}/v3/notifications/delete",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v3",
								"notifications",
								"delete"
							]
						},
						"description": "Delete Pinned Cards for multiple Unit ID\n---\n\nDelete all Persistent Visuals Alerts (Pinned Cards) associated with all the specified units.\n\n*Required Request Body Parameters:*\n- `recipients[*].type`: Type of recipient for which to delete notifications. Valid value: `Unit`.\n- `recipients[*].id`: ID of the unit for which to delete notifications. Must be in the format `\"amzn1.alexa.unit.did.{id}\"`.\n- `notificationTypes`: Type of notification to delete. Valid values: `PersistentVisualAlert` and `DeviceNotification`.\n\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-notifications-api.html#delete-all-notifications)"
					},
					"response": []
				}
			],
			"description": "You can use the Alexa Notifications REST API to send notifications to your customers. You can specify either of the following notification types:\n---\n\n- **Device notification** – For headless devices like Amazon Echo Dot, this is a yellow ring and a chime sound. For multimodal devices, it's a banner and a persistent notification indicator.\n- **Announcement** – For headless and multimodal devices, this is a voice announcement. Multimodal devices also display a message on the screen.\n- **PersistentVisualAlert** – For multimodal devices only. This a persistent notification that's displayed on the screen until it expires or the guest or resident dismisses it.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Smart Home",
			"item": [
				{
					"name": "Discovery Management",
					"item": [
						{
							"name": "Get Discovery Session Status",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v1/discoverySessions/{{DiscoverySessionId}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"discoverySessions",
										"{{DiscoverySessionId}}"
									]
								},
								"description": "Determine the status of a Discovery Session.\n---\n\n*Required Request Path Parameters:*\n- `id`: The discovery session ID, in the format \"amzn1.alexa.discoverySession.{id}\". Must be the `id` value returned by the `POST discoverySessions` call.\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-discovery-session-api.html#get-discovery-session)"
							},
							"response": []
						},
						{
							"name": "Initiate Discovery Session",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"endpointReporter\": {\n      \"type\": \"SKILL\",\n      \"value\": {\n         \"skillId\": \"{{SkillId}}\",\n         \"skillStage\": \"{{SkillStageLive}}\"\n      }\n   }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v1/discoverySessions?unit={{UnitId}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"discoverySessions"
									],
									"query": [
										{
											"key": "unit",
											"value": "{{UnitId}}",
											"description": "The unit ID, in the format \"amzn1.alexa.unit.did.{id}\" (Required Field)."
										}
									]
								},
								"description": "Create a Discovery Session\n---\nThis is initiated a discovery session on the Alexa Built-in device associated into a unit (e.g a room).\n\n*Required Request Query Parameters:*\n- `unit`: The unit ID, in the format \"amzn1.alexa.unit.did.{id}\".\n\n*Required Request Body Parameters:*\n- `endpointReporter.type`: The endpoint reporter type. Currently only SKILL is supported.\n- `endpointReporter.value.skillId`: The skill ID, in the format \"amzn1.alexa.skill.{id}\".\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-discovery-session-api.html#create-discovery-session)"
							},
							"response": []
						},
						{
							"name": "Forget Appliance",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v2/endpoints/{{EndpointId}}/forget",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"endpoints",
										"{{EndpointId}}",
										"forget"
									]
								},
								"description": "Forget an endpoint.\n---\n\n*Required Request Path Parameters:*\n- `endpointId`: The endpoint ID, in the Amazon Common Identifier (ACI) format \"amzn1.alexa.endpoint.{id}\".\n\n**Note:** This call only applies to Alexa's representation of the endpoint. It doesn't propagate back to the entity that reported the endpoint to Alexa (for example, a smart home skill). To ensure the endpoint is not automatically reconnected to Alexa, remove it from the reporter. For example, for endpoints that are reported by a manufacturer's smart home skill, remove the endpoint from the manufacturer's app before calling forget.\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-endpoint-api.html#forget-endpoint)"
							},
							"response": []
						}
					],
					"description": "Use the Discovery Session API to find the endpoints associated with a unit. Creating a discovery session instructs Alexa to look for new or updated endpoints, such as those connected via a smart home skill.\n---",
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{AccessToken}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Device Group Management",
					"item": [
						{
							"name": "List Device Groups into a Unit",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v1/deviceGroups?associatedUnits.id={{UnitId}}&expand=all",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"deviceGroups"
									],
									"query": [
										{
											"key": "associatedUnits.id",
											"value": "{{UnitId}}",
											"description": "The unit ID, in the format \"amzn1.alexa.unit.did.{id}\"."
										},
										{
											"key": "expand",
											"value": "all",
											"description": "The set of properties to return in the response. Currently the only supported value is \"all\". If this parameter isn't specified, only the \"id\" property is returned."
										}
									]
								},
								"description": "Retrieve a list of device groups from a given unit (property, room type or room).\n---\n\n*Required Request Query Parameters:*\n- `associatedUnits.id`: The unit ID, in the format \"amzn1.alexa.unit.did.{id}\".\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-device-group-mgt-api.html#list-groups)"
							},
							"response": []
						},
						{
							"name": "Create Device Group",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"friendlyName\": {\n    \"type\": \"PLAIN\",\n    \"value\": {\n      \"text\": \"{{FriendlyName}}\"\n    }\n  },\n  \"associatedUnits\": [\n    {\n      \"id\": \"{{UnitId}}\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v1/deviceGroups",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"deviceGroups"
									]
								},
								"description": "Create a device group into a given unit (property, room type or room).\n---\n\n*Required Request Body Parameters:*\n- `friendlyName`: The device group's friendly name, as a [`NameValue`](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-device-group-mgt-api.html#namevalue-object) object. All device groups within a unit must have unique names.\n- `associatedUnits`: Unit identifiers to associate with the device group.\n\n**Note**: Keep in mind the following constraints:\n\n1. Exactly one unit must be specified.\n\n2. The specified unit must exist and the caller must have access to it.\n\n3. Once created, a device group's associated unit cannot be changed.\n\n4. A unit cannot be associated with a device group after the device group has been created.\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-device-group-mgt-api.html#create-group)"
							},
							"response": []
						},
						{
							"name": "Update Device Group Friendly Name",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"PLAIN\",\n  \"value\": {\n    \"text\": \"{{FriendlyName}}\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v1/deviceGroups/{{EndpointGroupId}}/friendlyName",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"deviceGroups",
										"{{EndpointGroupId}}",
										"friendlyName"
									]
								},
								"description": "Change a device group's friendly name.\n---\n*Required Request Path Parameters:*\n- `id`: The device group identifier. Must represent a valid device group.\n\n*Required Request Body Parameters:*\n- `friendlyName`: The new friendly name for the device group, as a [`NameValue`](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-device-group-mgt-api.html#namevalue-object) object.\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-device-group-mgt-api.html#change-friendly-name)"
							},
							"response": []
						},
						{
							"name": "Add Endpoint to Group",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"memberDevice\": {\n      \"id\": \"{{EndpointId}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v1/deviceGroups/{{EndpointGroupId}}/memberDevices",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"deviceGroups",
										"{{EndpointGroupId}}",
										"memberDevices"
									]
								},
								"description": "Add a device to a device group.\n---\n*Required Request Path Parameters:*\n- `id`: The device group identifier. Must represent a valid device group.\n\n*Required Request Body Parameters:*\n- `memberDevice`: Device to add to the device group as a member. as a [`Endpoint`](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-device-group-mgt-api.html#endpoint-object) object.\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-device-group-mgt-api.html#add-device)"
							},
							"response": []
						},
						{
							"name": "Remove Endpoint from Group",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v1/deviceGroups/{{EndpointGroupId}}/memberDevices/{{EndpointId}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"deviceGroups",
										"{{EndpointGroupId}}",
										"memberDevices",
										"{{EndpointId}}"
									]
								},
								"description": "Remove a device from a device group.\n---\n*Required Request Path Parameters:*\n- `id`: The device group identifier. Must represent a valid device group.\n- `endpointId`: The endpoint identifier for the device to remove from the device group.  Must represent a valid [`Endpoint`](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-device-group-mgt-api.html#endpoint-object) object for a member device in the device group.\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-device-group-mgt-api.html#remove-device)"
							},
							"response": []
						},
						{
							"name": "Delete Device Group",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v1/deviceGroups/{{EndpointGroupId}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"deviceGroups",
										"{{EndpointGroupId}}"
									]
								},
								"description": "Delete a device group.\n---\n\n*Required Request Path Parameters:*\n- `id`: The device group identifier. Must represent a valid device group.\n\n**Note:** All member devices and associated units are removed from the device group upon deletion, but they continue to exist.\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-device-group-mgt-api.html#delete-group)"
							},
							"response": []
						}
					],
					"description": "In Alexa for Hospitality, you can use the Device Group Management API to create groups of devices within a unit.\n---\n\nA device group represents a group of devices that a user can control together by speaking to an Alexa Built-in device that's a member of the group.\n\nTargeting can be explicit or implicit: \n\n- **Explicit targeting** happens when the user specifies a device group name, for example, \"*Alexa, turn on the living room lights*\".\n\n- **Implicit targeting** happens when the user doesn't specify the group name. For example, if a user says, \"*Alexa, turn on the lights*\" to a device that's in a device group, Alexa turns on all lights in the group. \n\nDevices in a device group are typically located in the same physical space, but this isn't a requirement.\n\n**Note:** An Alexa Built-in device can only be a member of one device group at a time."
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Skill Management",
			"item": [
				{
					"name": "List All Skill Enablement",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{Host}}/v1/skills/enablements?unitId={{UnitId}}",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v1",
								"skills",
								"enablements"
							],
							"query": [
								{
									"key": "unitId",
									"value": "{{UnitId}}",
									"description": "The unit ID, in the format \"amzn1.alexa.unit.did.{id}\" (Required Field)."
								}
							]
						},
						"description": "Get a list of all skill enablements for a unit.\n---\n\n*Required Request Query Parameters:*\n- `unitId`: The unit ID, in the format \"amzn1.alexa.unit.did.{id}\".\n\n**Note:** This will give you all skill enablement whatever skill stage has been enabled.\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-skill-management-api.html#list-skill-enablements-for-a-unit)"
					},
					"response": []
				},
				{
					"name": "Get Skill Status in Unit",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{Host}}/v1/skills/{{SkillId}}/enablements?unitId={{UnitId}}",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v1",
								"skills",
								"{{SkillId}}",
								"enablements"
							],
							"query": [
								{
									"key": "unitId",
									"value": "{{UnitId}}",
									"description": "The unit ID, in the format \"amzn1.alexa.unit.did.{id}\" (Required Field)."
								}
							]
						},
						"description": "Get the skill enablement record for a specific skill for a unit.\n---\n\n*Required Request Path Parameters:*\n- `skillId`: The skill ID, in the format \"amzn1.alexa.skill.{id}\".\n\n*Required Request Query Parameters:*\n- `unitId`: The unit ID, in the format \"amzn1.alexa.unit.did.{id}\".\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-skill-management-api.html#get-skill-enablement-record-for-a-unit)"
					},
					"response": []
				},
				{
					"name": "Enable a Skill into a Unit",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"unitId\": \"{{UnitId}}\",\n  \"stage\": \"{{SkillStageLive}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{Host}}/v1/skills/{{SkillId}}/enablements",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v1",
								"skills",
								"{{SkillId}}",
								"enablements"
							]
						},
						"description": "Enable a skill for a unit.\n---\n\n*Required Request Path Parameters:*\n- `skillId`: The skill ID, in the format \"amzn1.alexa.skill.{id}\".\n\n*Required Request Body Parameters:*\n- `unitId`: The unit ID, in the format \"amzn1.alexa.unit.did.{id}\".\n- `stage`: The selected skill stage: `development` or `live`\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-skill-management-api.html#enable-a-skill)"
					},
					"response": []
				},
				{
					"name": "Bulk Enablement - Same Skill - Multiple Units",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"items\": [\n         {\n             \"itemId\": 0,\n             \"unitId\": \"amzn1.alexa.unit.unitId1\",\n             \"stage\": \"live\",\n             \"partitionName\": \"10-101\", // Optional\n             \"accountLinkRequest\": { // Optional, only for skills that support account linking\n                 \"redirectUri\": \"https://redirecturi.com\",\n                 \"authCode\": \"3pauthcode1\",\n                 \"type\": \"AUTH_CODE\"\n             }\n         },\n         {\n             \"itemId\": 1,\n             \"unitId\": \"amzn1.alexa.unit.unitId2\",\n             \"stage\": \"live\",\n             \"partitionName\": \"11-101,11-102,11-103\" // Optional\n         }\n     ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{Host}}/v1/skills/{{SkillId}}/enablements/batch",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v1",
								"skills",
								"{{SkillId}}",
								"enablements",
								"batch"
							]
						},
						"description": "Enable the same skill for multiple units in a single request.\n---\n\n*Required Request Path Parameters:*\n- `skillId`: The skill ID, in the format \"amzn1.alexa.skill.{id}\".\n\n*Required Request Body Parameters:*\n- `unitId`: The unit ID, in the format \"amzn1.alexa.unit.did.{id}\".\n- `stage`: The selected skill stage: `development` or `live`\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-skill-management-api.html#enable-a-skill-bulk)"
					},
					"response": []
				},
				{
					"name": "Disable a Skill from a Unit",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://{{Host}}/v1/skills/{{SkillId}}/enablements?unitId={{UnitId}}",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v1",
								"skills",
								"{{SkillId}}",
								"enablements"
							],
							"query": [
								{
									"key": "unitId",
									"value": "{{UnitId}}",
									"description": "The unit ID, in the format \"amzn1.alexa.unit.did.{id}\" (Required Field)."
								}
							]
						},
						"description": "Disable a skill for a unit.\n---\n\n*Required Request Path Parameters:*\n- `skillId`: The skill ID, in the format \"amzn1.alexa.skill.{id}\".\n\n*Required Request Query Parameters:*\n- `unitId`: The unit ID, in the format \"amzn1.alexa.unit.did.{id}\".\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-skill-management-api.html#disable-a-skill)"
					},
					"response": []
				}
			],
			"description": "Use the Skill Management API to manage skills for Alexa for Hospitality units such as rooms.\n---",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Communications",
			"item": [
				{
					"name": "Communication Profile",
					"item": [
						{
							"name": "Create Communication Profile",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"entity\": {\n        \"type\": \"UNIT\",\n        \"id\": \"amzn1.alexa.unit.did.{UnitId}\"\n    },\n    \"name\": \"profile display name\"\n}   ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v1/communications/profile/",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"communications",
										"profile",
										""
									]
								},
								"description": "Create a communication profile.\n---\n\nWhen you create a communication profile, it enables the communication capability and creates a profileId for a unit.\n\n*Required Request Body Parameters:*\n- `type`: The type of ID you are using to create a communication profile.\n- `id`: The unit ID you are using to create a communications profile, in the format \"amzn1.alexa.unit.did.{UnitId}\"\n\n**Note:**  If a profile already exists for the unit, the existing profileID for the unit is returned.\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-communications-api.html#create-profile)"
							},
							"response": []
						},
						{
							"name": "Bulk Creation - Communication Profile",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"items\": [\n        {\n            \"itemId\": {uniqueRequestItemId1},\n            \"entity\": {\n                \"type\": \"UNIT\",\n                \"id\": \"amzn1.alexa.unit.did.{unitId-1}\"\n            },\n            \"name\": \"{optionalProfileDisplayName1}\"\n        },\n        {\n            \"itemId\": {uniqueRequestItemId2},\n            \"entity\": {\n                \"type\": \"UNIT\",\n                \"id\": \"amzn1.alexa.unit.did.{unitId-2}\"\n            },\n            \"name\": \"{optionalProfileDisplayName2}\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v1/communications/profiles/batch",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"communications",
										"profiles",
										"batch"
									]
								},
								"description": "Create communication profiles in batch.\n---\n\nYou can create profiles for up to 100 units in a single request (one profile per unit). \n\nEach unit receives a unique `profileId`. \n\nYou can then add the `profileId` as a contact in the address book of a different unit.\n\n*Required Request Body Parameters:*\n- `type`: The type of ID you are using to create a communication profile.\n- `id`: The unit ID you are using to create a communications profile, in the format \"amzn1.alexa.unit.did.{UnitId}\"\n- `itemId`: The unique ID of a request item. Typically item IDs are a sequence of numbers from starting from 1.\n\n**Note:**  If a profile already exists for the unit, the existing profileID for the unit is returned.\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-communications-api.html#create-communication-profiles-in-bulk)"
							},
							"response": []
						},
						{
							"name": "Get a Unit ID from a Communication ProfileId",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v1/communications/profile/{{CommsProfileId}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"communications",
										"profile",
										"{{CommsProfileId}}"
									]
								},
								"description": "Get the unit ID associated with a communication profile.\n---\n\n*Required Request Path Parameters:*\n- `profileId `: The unique profile id that identifies the communication profile you are fetching. Generated when you created a communication profile for the first time.\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-communications-api.html#get-a-communication-profile-by-profileid)"
							},
							"response": []
						},
						{
							"name": "Get a Communication Profile by Unit ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v1/communications/profile?entity.type=UNIT&entity.id={{UnitId}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"communications",
										"profile"
									],
									"query": [
										{
											"key": "entity.type",
											"value": "UNIT",
											"description": "The type of id for the communication profile you are fetching."
										},
										{
											"key": "entity.id",
											"value": "{{UnitId}}",
											"description": "The unit ID of the communication profile you are fetching, in the format \"amzn1.alexa.unit.did.{UnitId}\""
										}
									]
								},
								"description": "Get the Communication Profile associated with a unit.\n---\n\n*Required Request Query Parameters:*\n- `entity.type`: The type of id for the communication profile you are fetching.\n- `entity.id`: The unit ID of the communication profile you are fetching, in the format \"amzn1.alexa.unit.did.{UnitId}\"\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-communications-api.html#get-a-communication-profile-by-entity-id)"
							},
							"response": []
						},
						{
							"name": "Update Communication Profile Display Name",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<profile display name>\"\n }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v1/communications/profile/{{CommsProfileId}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"communications",
										"profile",
										"{{CommsProfileId}}"
									]
								},
								"description": "Create a communication profile.\n---\n\nWhen you create a communication profile, it enables the communication capability and creates a profileId for a unit.\n\n*Required Request Body Parameters:*\n- `type`: The type of ID you are using to create a communication profile.\n- `id`: The unit ID you are using to create a communications profile, in the format \"amzn1.alexa.unit.did.{UnitId}\"\n\n**Note:**  If a profile already exists for the unit, the existing profileID for the unit is returned.\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-communications-api.html#create-profile)"
							},
							"response": []
						},
						{
							"name": "Delete Communication Profile",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v1/communications/profile/{{CommsProfileId}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"communications",
										"profile",
										"{{CommsProfileId}}"
									]
								},
								"description": "Delete a communication profile.\n---\n\nThis call completes the following actions:\n\n1. Disables the communication capability.\n2. Deletes the profileId assigned to a unit.\n3. Delete any contacts in address books where profileID is the contact.\n\n*Required Request Path Parameters:*\n- `profileId`: The unique profile id that identifies the communication profile you are deleting. Generated when you created a communication profile for the first time.\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-communications-api.html#delete-a-communication-profile)"
							},
							"response": []
						}
					],
					"description": "To support calling, a unit must create a communications profile – communications Profiles aren't auto-created. When you create communication profile for a unit, it's assigned a unique identifier called a profileId. You can then add the profileId as a contact in the address book of a different unit.\n---"
				},
				{
					"name": "Address Books",
					"item": [
						{
							"name": "List Address Books",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v1/addressBooks",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"addressBooks"
									]
								},
								"description": "Retrieve the list of address books.\n---\n\nThe optional `maxResults` and `nextToken` values provide pagination for the results.\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-communications-api.html#list-address-books)"
							},
							"response": []
						},
						{
							"name": "Create Address Book",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Hotel Address Book\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v1/addressBooks",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"addressBooks"
									]
								},
								"description": "Create an address book.\n---\n\n*Required Request Body Parameters:*\n- `name`: The address book name. Must be between 1 and 50 characters long.\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-communications-api.html#create-an-address-book)"
							},
							"response": []
						},
						{
							"name": "Read Address Book",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v1/addressBooks/{{AddressBookId}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"addressBooks",
										"{{AddressBookId}}"
									]
								},
								"description": "Retrieve the metadata for an address book.\n---\n\n*Required Request Path Parameters:*\n- `addressBookId`: The address book ID, in the format \"amzn1.alexa.addressbook.did.{id}\".\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-communications-api.html#get-address-book)"
							},
							"response": []
						},
						{
							"name": "Update Address Book",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"my address book name\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v1/addressBooks/{{AddressBookId}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"addressBooks",
										"{{AddressBookId}}"
									]
								},
								"description": "Update the address book name.\n---\n\n*Required Request Path Parameters:*\n- `addressBookId`: The address book ID, in the format \"amzn1.alexa.addressbook.did.{id}\".\n\n*Required Request Body Parameters:*\n- `name`: The new address book name. Must be between 1 and 50 characters long.\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-communications-api.html#update-address-book)"
							},
							"response": []
						},
						{
							"name": "Delete Address Book",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v1/addressBooks/{{AddressBookId}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"addressBooks",
										"{{AddressBookId}}"
									]
								},
								"description": "Update the address book name.\n---\n\n*Required Request Path Parameters:*\n- `addressBookId`: The address book ID, in the format \"amzn1.alexa.addressbook.did.{id}\".\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-communications-api.html#delete-an-address-book)"
							},
							"response": []
						}
					]
				},
				{
					"name": "Contacts",
					"item": [
						{
							"name": "List Contacts",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v1/addressBooks/{{AddressBookId}}/contacts",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"addressBooks",
										"{{AddressBookId}}",
										"contacts"
									]
								},
								"description": "Retrieve the contacts for a given address book.\n---\n\n*Required Request Path Parameters:*\n- `addressBookId`: The address book ID, in the format \"amzn1.alexa.addressbook.did.{id}\".\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-communications-api.html#list-contacts)"
							},
							"response": []
						},
						{
							"name": "Create Contact from a Communication Profile",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"contact\": {\n        \"name\": \"{{ContactName}}\",\n        \"alexaCommunicationProfileId\": \"{{CommsProfileId}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v1/addressBooks/{{AddressBookId}}/contacts",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"addressBooks",
										"{{AddressBookId}}",
										"contacts"
									]
								},
								"description": "Add a contact to an address book from a communication profile.\n---\n\nA contact is an address book entry that represents a callable Alexa device or PSTN number. \n\nYou can create a contact with either a phone number or a communication profile.\n\n*Required Request Path Parameters:*\n- `addressBookId`: The address book ID, in the format \"amzn1.alexa.addressbook.did.{id}\".\n\n*Required Request Body Parameters:*\n- `name`: The contact name. Must be between 1 and 50 characters long.\n- `alexaCommunicationProfileId`: The id of your communication profile.\n\n**Note:** You can't add both a phone number and a alexaCommunicationProfileId to the same contact.\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-communications-api.html#create-contact)"
							},
							"response": []
						},
						{
							"name": "Create Contact with Phone Numbers",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"contact\": {\n        \"name\": \"{{ContactName}}\",\n        \"phoneNumbers\": [\n            {\n                \"number\": \"+12055551233\"\n            },\n            {\n                \"number\": \"+12055551244\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v1/addressBooks/{{AddressBookId}}/contacts",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"addressBooks",
										"{{AddressBookId}}",
										"contacts"
									]
								},
								"description": "Add a contact to an address book with phone numbers for PSTN calling.\n---\n\nA contact is an address book entry that represents a callable Alexa device or PSTN number. \n\nYou can create a contact with either a phone number or a communication profile.\n\n*Required Request Path Parameters:*\n- `addressBookId`: The address book ID, in the format \"amzn1.alexa.addressbook.did.{id}\".\n\n*Required Request Body Parameters:*\n- `name`: The contact name. Must be between 1 and 50 characters long.\n- `number`: The contact phone number. Must be a US, UK, or Canada (CA) telephone number in E.164 format. Up to three phone numbers can be specified for a contact. \n\n**Note:** You can't add both a phone number and a alexaCommunicationProfileId to the same contact.\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-communications-api.html#create-contact)"
							},
							"response": []
						},
						{
							"name": "Bulk Creation - Contacts",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"items\": [\n        {\n            \"itemId\": {uniqueRequestItemId1},\n            \"contact\": {\n                \"name\": \"{contactName}\",\n                \"phoneNumbers\": [\n                    {\n                        \"number\": \"{phoneNumber}\"\n                    }\n                ]\n            }\n        },\n        {\n            \"itemId\": {uniqueRequestItemId2},\n            \"contact\": {\n              \"name\": \"{contactName}\",\n              \"alexaCommunicationProfileId\": \"{communicationProfile}\"\n            }\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v1/addressBooks/{{AddressBookId}}/contacts/batch",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"addressBooks",
										"{{AddressBookId}}",
										"contacts",
										"batch"
									]
								},
								"description": "Create address book contacts in batch.\n---\n You can create up to 100 contacts in a single request.\n\nA contact is an address book entry that represents a callable Alexa device or PSTN number. \n\nYou can create a contact with either a phone number or a communication profile.\n\n*Required Request Path Parameters:*\n- `addressBookId`: The address book ID, in the format \"amzn1.alexa.addressbook.did.{id}\".\n\n*Required Request Body Parameters:*\n- `items`: A list of items for which to execute the operation.\n- `itemId`: \tThe unique ID of a request item. Typically item IDs are a sequence of numbers from starting from 1.\n- `number`: The contact phone number. Must be in E.164 format. Up to three phone numbers can be added.\n- `alexaCommunicationProfileId`:The id of your communication profile.\n- `name`: The contact name. Must be between 1 and 50 characters long.\n\n**Note:** You can't add both a phone number and a alexaCommunicationProfileId to the same contact.\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-communications-api.html#create-contacts-in-bulk)"
							},
							"response": []
						},
						{
							"name": "Read Contact",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v1/addressBooks/{{AddressBookId}}/contacts/{{ContactId}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"addressBooks",
										"{{AddressBookId}}",
										"contacts",
										"{{ContactId}}"
									]
								},
								"description": "Retrieve the metadata for a contact.\n---\n\nA contact is an address book entry that represents a callable Alexa device or PSTN number.\n\n*Required Request Path Parameters:*\n- `addressBookId`: The address book ID, in the format \"amzn1.alexa.addressbook.did.{id}\".\n- `contactId`: The contact ID, in the format \"amzn1.alexa.contacts.did.{id}\".\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-communications-api.html#get-contact)"
							},
							"response": []
						},
						{
							"name": "Update Contact with Phone Numbers",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"contact\": {\n        \"name\": \"{contactName}\",\n        \"phoneNumbers\": [\n            {\n                \"number\": \"{phoneNumber}\"\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v1/addressBooks/{{AddressBookId}}/contacts/{{ContactId}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"addressBooks",
										"{{AddressBookId}}",
										"contacts",
										"{{ContactId}}"
									]
								},
								"description": "Update the metadata for a contact (PSTN contact).\n---\n\nA contact is an address book entry that represents a callable Alexa device or PSTN number.\n\nYou can update a contact with either a phone number or a communication profile.\n\n*Required Request Path Parameters:*\n- `addressBookId`: The address book ID, in the format \"amzn1.alexa.addressbook.did.{id}\".\n- `contactId`: The contact ID, in the format \"amzn1.alexa.contacts.did.{id}\".\n\n*Required Request Body Parameters:*\n- `name`: The contact name. Must be between 1 and 50 characters long.\n- `number`: The contact phone number. Must be a US, UK, or Canada (CA) telephone number in E.164 format. Up to three phone numbers can be specified for a contact. \n\n**Note:** You can't add both a phone number and a alexaCommunicationProfileId to the same contact.\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-communications-api.html#update-a-contact)"
							},
							"response": []
						},
						{
							"name": "Update Contact for Communication Profile",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"contact\": {\n        \"name\": \"space\",\n        \"alexaCommunicationProfileId\": \"{{CommsProfileId}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v1/addressBooks/{{AddressBookId}}/contacts/{{ContactId}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"addressBooks",
										"{{AddressBookId}}",
										"contacts",
										"{{ContactId}}"
									]
								},
								"description": "Update the metadata for a contact.\n---\n\nA contact is an address book entry that represents a callable Alexa device or PSTN number.\n\nYou can update a contact with either a phone number or a communication profile.\n\n*Required Request Path Parameters:*\n- `addressBookId`: The address book ID, in the format \"amzn1.alexa.addressbook.did.{id}\".\n- `contactId`: The contact ID, in the format \"amzn1.alexa.contacts.did.{id}\".\n\n*Required Request Body Parameters:*\n- `name`: The contact name. Must be between 1 and 50 characters long.\n- `alexaCommunicationProfileId`: The id of your communication profile. \n\n**Note:** You can't add both a phone number and a alexaCommunicationProfileId to the same contact.\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-communications-api.html#update-a-contact)"
							},
							"response": []
						},
						{
							"name": "Delete Contact",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v1/addressBooks/{{AddressBookId}}/contacts/{{ContactId}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"addressBooks",
										"{{AddressBookId}}",
										"contacts",
										"{{ContactId}}"
									]
								},
								"description": "Delete a contact from an address book.\n---\n\nA contact is an address book entry that represents a callable Alexa device or PSTN number.\n\n*Required Request Path Parameters:*\n- `addressBookId`: The address book ID, in the format \"amzn1.alexa.addressbook.did.{id}\".\n- `contactId`: The contact ID, in the format \"amzn1.alexa.contacts.did.{id}\".\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-communications-api.html#delete-a-contact)"
							},
							"response": []
						}
					]
				},
				{
					"name": "Address Book Associations",
					"item": [
						{
							"name": "List Address Book Asssociations into a Unit",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v1/addressBooks/unitAssociations?unitId={{UnitId}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"addressBooks",
										"unitAssociations"
									],
									"query": [
										{
											"key": "unitId",
											"value": "{{UnitId}}",
											"description": "The unit ID, in the format \"amzn1.alexa.unit.did.{id}\"."
										}
									]
								},
								"description": "Retrieve the list of address books that are associated with a unit.\n---\n\n*Required Request Query Parameters:*\n- `unitId`: The unit ID, in the format \"amzn1.alexa.unit.did.{id}\".\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-communications-api.html#list-address-book-associations-for-a-unit)"
							},
							"response": []
						},
						{
							"name": "Create Address Book Association",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"unitId\": \"amzn1.alexa.unit.did.{id}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v1/addressBooks/{{AddressBookId}}/unitAssociations",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"addressBooks",
										"{{AddressBookId}}",
										"unitAssociations"
									]
								},
								"description": "Associate an address book with a unit.\n---\n\n*Required Request Query Parameters:*\n- `addressBookId`: The address book ID, in the format \"amzn1.alexa.addressbook.did.{id}\".\n\n*Required Request Body Parameters:*\n- `unitId`: The unit ID, in the format \"amzn1.alexa.unit.did.{id}\".\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-communications-api.html#create-address-book-association)"
							},
							"response": []
						},
						{
							"name": "Bulk Creation - Address Book Association",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"items\": [\n        {\n            \"itemId\": {uniqueRequestItemId1},\n             \"unitId\": \"amzn1.alexa.unit.did.{unitId-1}\"\n        },\n        {\n            \"itemId\": {uniqueRequestItemId2},\n             \"unitId\": \"amzn1.alexa.unit.did.{unitId-2}\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v1/addressBooks/{{AddressBookId}}/unitAssociations/batch",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"addressBooks",
										"{{AddressBookId}}",
										"unitAssociations",
										"batch"
									]
								},
								"description": "Associate in batch the same address book with multiple units.\n---\n\nA single call can associate an address book with up to 100 units.\n\n*Required Request Query Parameters:*\n- `addressBookId`: The address book ID, in the format \"amzn1.alexa.addressbook.did.{id}\".\n\n*Required Request Body Parameters:*\n- `itemId`: The unique ID of a request item. Typically item IDs are a sequence of numbers from starting from 1.\n- `unitId`: The unit ID, in the format \"amzn1.alexa.unit.did.{id}\".\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-communications-api.html#create-address-book-associations-in-bulk)"
							},
							"response": []
						},
						{
							"name": "Read Address Book Association",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v1/addressBooks/{{AddressBookId}}/unitAssociations",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"addressBooks",
										"{{AddressBookId}}",
										"unitAssociations"
									]
								},
								"description": "Retrieve an address book association with a unit.\n---\n\n*Required Request Query Parameters:*\n- `addressBookId`: The address book ID, in the format \"amzn1.alexa.addressbook.did.{id}\".\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-communications-api.html#get-address-book-association)"
							},
							"response": []
						},
						{
							"name": "Delete Address Book Association",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v1/addressBooks/{{AddressBookId}}/unitAssociations?unitId={{UnitId}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"addressBooks",
										"{{AddressBookId}}",
										"unitAssociations"
									],
									"query": [
										{
											"key": "unitId",
											"value": "{{UnitId}}",
											"description": "The unit ID, in the format \"amzn1.alexa.unit.did.{id}\" (Required Field)."
										}
									]
								},
								"description": "Remove the association between an address book and a unit.\n---\n\n*Required Request Query Parameters:*\n- `addressBookId`: The address book ID, in the format \"amzn1.alexa.addressbook.did.{id}\".\n\n*Required Request Path Parameters:*\n- `unitId`: The unit ID, in the format \"amzn1.alexa.unit.did.{id}\".\n\n**Note:** All of a unit's address book associations must be deleted before the unit itself can be deleted.\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-communications-api.html#delete-address-book-association)"
							},
							"response": []
						}
					]
				},
				{
					"name": "Inbound Calling (Reciprocal Association)",
					"item": [
						{
							"name": "Get Reciprocal Association Status",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v1/communications/profile/{{CommsProfileId}}/reciprocalAssociations?contactId={{ContactId}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"communications",
										"profile",
										"{{CommsProfileId}}",
										"reciprocalAssociations"
									],
									"query": [
										{
											"key": "contactId",
											"value": "{{ContactId}}",
											"description": "ContactId for which reciprocal association status against profileId will be retrieved."
										}
									]
								},
								"description": "Get reciprocal association status between profileId and contactId\n---\n\n*Required Request Path Parameters:*\n- `profileId`: The unique profile id that identifies the communication profile for an entity. Generated when you created a communication profile for the first time.\n\n*Required Request Query Parameters:*\n- `contactId`: ContactId for which reciprocal association status against profileId will be retrieved.\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-communications-api.html#get-reciprocal-association-status)"
							},
							"response": []
						},
						{
							"name": "Create Reciprocal Association",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"contact\": {\n            \"id\": \"{{ContactId}}\"\n        }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v1/communications/profile/{{CommsProfileId}}/reciprocalAssociations",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"communications",
										"profile",
										"{{CommsProfileId}}",
										"reciprocalAssociations"
									]
								},
								"description": "Create a reciprocal association between profileId of a property unit and contactId of an external contact\n---\n\n*Required Request Path Parameters:*\n- `profileId`: The unique profile id that identifies the communication profile for an entity. Generated when you created a communication profile for the first time..\n\n*Required Request Body Parameters:*\n- `contact.id`: contactId of the external contact for which reciprocal contact will be created against profileId. \n\n**Note:** Messaging and Drop-In calling are not supported with the Inbound Calling feature.\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-communications-api.html#create-recriprocal-association)"
							},
							"response": []
						},
						{
							"name": "Delete a Reciprocal Association Status",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v1/communications/profile/{{CommsProfileId}}/reciprocalAssociations?contactId={{ContactId}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"communications",
										"profile",
										"{{CommsProfileId}}",
										"reciprocalAssociations"
									],
									"query": [
										{
											"key": "contactId",
											"value": "{{ContactId}}",
											"description": "ContactId for which Reciprocal Association status against profileId will be retrieved."
										}
									]
								},
								"description": "Delete the reciprocal association between profileId and contactId.\n---\n\nThis API will remove entity (UNIT) as contact from contactId’s customer’s addressBook and will send an Alexa message to external user’s Alexa companion app and Echo devices informing them that the association has been deleted. \n\nThe deletion of reciprocal association disables Inbound Calling for that external contact to that unit.\n\n*Required Request Path Parameters:*\n- `profileId`: The unique profile id that identifies the communication profile for an entity. Generated when you created a communication profile for the first time.\n\n*Required Request Body Parameters:*\n- `contactId`:ContactId for which reciprocal association status against profileId will be retrieved.\n\n---\n\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-communications-api.html#delete-reciprocal-association)"
							},
							"response": []
						}
					]
				},
				{
					"name": "WebRTC",
					"item": [
						{
							"name": "ServiceProvider",
							"item": [
								{
									"name": "Create Service Provider",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"serviceProviderLogicalId\" : \"example_service_provider\",\n    \"displayName\": [\n       {\n          \"locale\": \"en-US\",\n          \"value\": \"ADD SERVICE PROVIDER NAME\"\n       }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{Host}}/v1/communications/serviceProviders",
											"protocol": "https",
											"host": [
												"{{Host}}"
											],
											"path": [
												"v1",
												"communications",
												"serviceProviders"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Service Provider",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{Host}}//v1/communications/serviceProviders/{serviceProviderId}",
											"protocol": "https",
											"host": [
												"{{Host}}"
											],
											"path": [
												"",
												"v1",
												"communications",
												"serviceProviders",
												"{serviceProviderId}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Service Provider",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{Host}}//v1/communications/serviceProviders/{serviceProviderId}",
											"protocol": "https",
											"host": [
												"{{Host}}"
											],
											"path": [
												"",
												"v1",
												"communications",
												"serviceProviders",
												"{serviceProviderId}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Service Provider",
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{Host}}//v1/communications/serviceProviders/{serviceProviderId}",
											"protocol": "https",
											"host": [
												"{{Host}}"
											],
											"path": [
												"",
												"v1",
												"communications",
												"serviceProviders",
												"{serviceProviderId}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "NetworkMapping",
							"item": [
								{
									"name": "Create Network Mapping",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"networkType\": \"SKILL\",\n    \"skillConfiguration\": {\n        \"skillId\": \"{your Alexa skill for handling WebRTC requests}\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{Host}}/v1/communications/serviceProviders/{serviceProviderId}/network",
											"protocol": "https",
											"host": [
												"{{Host}}"
											],
											"path": [
												"v1",
												"communications",
												"serviceProviders",
												"{serviceProviderId}",
												"network"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Network Mapping",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{Host}}/v1/communications/serviceProviders/{serviceProviderId}/network",
											"protocol": "https",
											"host": [
												"{{Host}}"
											],
											"path": [
												"v1",
												"communications",
												"serviceProviders",
												"{serviceProviderId}",
												"network"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Network Mapping",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"networkType\": \"SKILL\",\n    \"skillConfiguration\": {\n        \"skillId\": \"{your Alexa skill for handling WebRTC requests}\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{Host}}/v1/communications/serviceProviders/{serviceProviderId}/network",
											"protocol": "https",
											"host": [
												"{{Host}}"
											],
											"path": [
												"v1",
												"communications",
												"serviceProviders",
												"{serviceProviderId}",
												"network"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Network Mapping",
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{Host}}/v1/communications/serviceProviders/{serviceProviderId}/network",
											"protocol": "https",
											"host": [
												"{{Host}}"
											],
											"path": [
												"v1",
												"communications",
												"serviceProviders",
												"{serviceProviderId}",
												"network"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Account Association",
							"item": [
								{
									"name": "Create Account Association",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"externalUserId\": \"7201\",\n    \"amazonId\": \"amzn1.alexa.communications.profile.did.ABC1234\",\n    \"amazonIdType\": \"communication-profile\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{Host}}/v1/communications/serviceProviders/{serviceProviderId}/externalUsers",
											"protocol": "https",
											"host": [
												"{{Host}}"
											],
											"path": [
												"v1",
												"communications",
												"serviceProviders",
												"{serviceProviderId}",
												"externalUsers"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Account Association",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"externalUserId\": \"7201\",\n    \"amazonId\": \"amzn1.alexa.communications.profile.did.ABC1234\",\n    \"amazonIdType\": \"communication-profile\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{Host}}/v1/communications/serviceProviders/{serviceProviderId}/externalUsers",
											"protocol": "https",
											"host": [
												"{{Host}}"
											],
											"path": [
												"v1",
												"communications",
												"serviceProviders",
												"{serviceProviderId}",
												"externalUsers"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Account Association",
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"externalUserId\": \"7201\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{Host}}/v1/communications/serviceProviders/{serviceProviderId}/externalUsers",
											"protocol": "https",
											"host": [
												"{{Host}}"
											],
											"path": [
												"v1",
												"communications",
												"serviceProviders",
												"{serviceProviderId}",
												"externalUsers"
											]
										}
									},
									"response": []
								},
								{
									"name": "Query Account Association",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"filters\": {\n        \"externalUserIds\": [\n            \"TestUserId@test.com\"\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{Host}}/v1/communications/serviceProviders/{serviceProviderId}/externalUsers/query",
											"protocol": "https",
											"host": [
												"{{Host}}"
											],
											"path": [
												"v1",
												"communications",
												"serviceProviders",
												"{serviceProviderId}",
												"externalUsers",
												"query"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Create Contact via WebRTC",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "content-type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"contact\": {\n    \"name\": \"ADD CONTACT NAME YOU WOULD LIKE\", \n    \"providerContact\": {\n            \"id\":\"ADD ANY ID YOU WOULD LIKE\" }\n    }\n}"
								},
								"url": {
									"raw": "https://{{Base URI}}/v1/addressBooks/{addressbookID}/contacts",
									"protocol": "https",
									"host": [
										"{{Base URI}}"
									],
									"path": [
										"v1",
										"addressBooks",
										"{addressbookID}",
										"contacts"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"description": "With this API, you can manage Address Books, Contacts and Communications Profile to enable Alexa 2 Alexa calling as well as Alexa 2 landline calling (PSTN).\n---\n\nBe aware of the following resources limits:\n\n- Maximum number of contacts allowed in an address book: **2000**\t\n- Maximum number of address books that can be associated with a unit: **10**\n- Maximum number of units that an address book can be associated with: **2500**\n- Max number of phone numbers per contact: **3**\n- Max number of address books per organization: **2500**\n\n**Note**: PSTN calling is not yet supported in FR"
		},
		{
			"name": "Customer Profile",
			"item": [
				{
					"name": "Get Customer Profile",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.amazon.com/user/profile",
							"protocol": "https",
							"host": [
								"api",
								"amazon",
								"com"
							],
							"path": [
								"user",
								"profile"
							]
						},
						"description": "Obtain Customer Profile Information\n---\n\nCall `GET /user/profile/` to retrieve data about an Amazon Customer from their Account.\n\nA customer profile contains the data that Login with Amazon applications can access regarding a particular customer. This includes: a unique ID for the user; the user's name, the user's email address, and their postal code. This data is divided into three scopes: profile, profile:user_id and postal_code.\n\nOnly the User ID (also known as the Principal ID) is required for usage with [ASP Role API](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-role-api.html).\n\n**Note:** Host to be used is `api.amazon.com` *(Do not mistake it with `api.amazonalexa.com`).*\n\n---\n\n[see Online Doc](https://developer.amazon.com/docs/login-with-amazon/obtain-customer-profile.html#call-profile-endpoint)"
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "List Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{Host}}/v1/auth/users?organizationId={{OrgId}}",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v1",
								"auth",
								"users"
							],
							"query": [
								{
									"key": "organizationId",
									"value": "{{OrgId}}",
									"description": "ID of the organization to which to list the users. The format of the organization ID is amzn1.alexa.org.did.{id}."
								}
							]
						},
						"description": "Lists the users of the specified organization.\n---\n\n*Required Query Params Parameters:*\n- `organizationId`: ID of the organization to which to list the users. The format of the organization ID is amzn1.alexa.org.did.{id}.\n\nThe optional `maxResults` and `nextToken` values provide pagination for the results.\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-user-api.html#list-users)"
					},
					"response": []
				},
				{
					"name": "Create a User",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"organizationId\": {{OrgId}}\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{Host}}/v1/auth/users",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v1",
								"auth",
								"users"
							]
						},
						"description": "Creates a User in the specified Organization.\n---\n\n*Required Body Request Parameters:*\n- `organizationId`: ID of the organization to which to list the users. The format of the organization ID is amzn1.alexa.org.did.{id}.\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-user-api.html#create-user)"
					},
					"response": []
				},
				{
					"name": "Delete a User",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://{{Host}}/v1/auth/users/{{UserId}}",
							"protocol": "https",
							"host": [
								"{{Host}}"
							],
							"path": [
								"v1",
								"auth",
								"users",
								"{{UserId}}"
							]
						},
						"description": "Removes a user from a specified Organization.\n---\n\n*Required Requset Path Parameters:*\n- `userId`: ID for the user to remove. The format of the user ID is amzn1.alexa.org.user.did.{id}.\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-user-api.html#delete-user)"
					},
					"response": []
				}
			],
			"description": "The User API enables you to create, delete, and list representations of users.\n---"
		},
		{
			"name": "Automations (Routines)",
			"item": [
				{
					"name": "Templates",
					"item": [
						{
							"name": "Create a Automation Template with Voice Trigger",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"template\":{\n    \"trigger\":{\n       \"type\": \"Alexa.Automation.Trigger.Voice.CustomUtterance\",\n       \"version\": \"1.0\",\n       \"payload\": {\n          \"utterances\": [\"${data.customUtterance.text}\", \"hello world\", \"bazinga\"],\n          \"locale\": \"en-US\"\n       }\n    },\n    \"operations\":{\n      \"serial\":[\n        {\n          \"operation\":{\n    \t\t\"type\": \"Alexa.Automation.Operation.Notification.Notify\",\n    \t\t\"version\": \"1.0\",\n    \t    \"payload\": {\n        \t\"notification\": {\n            \t\"variants\": [{\n                \"type\": \"Announcement\",\n                \"content\": {\n                    \"variants\": [{\n                        \"type\": \"SpokenText\",\n                        \"values\": [{\n                            \"locale\": \"en-US\",\n                            \"text\": \"Happy hour is starting now in the pool area!\"\n                        }]\n                    }]\n                }\n             }]\n           }\n          }\n         }\n        }\n      ]\n    }\n  },\n  \"dataDefinition\":{\n    \"customUtterance\":{\n      \"type\":\"object\",\n      \"required\":[\n        \"text\"\n      ],\n      \"properties\":{\n        \"text\":{\n          \"type\":\"string\",\n          \"minLength\":1\n        }\n      }\n    }\n  },\n  \"friendlyName\":{\n    \"value\":{\n      \"text\":\"Trigger by Voice\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v2/automations/templates",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"automations",
										"templates"
									]
								},
								"description": "Creates an automation template that's owned by the user the LWA token represents.\n---\n\nThe list of available Trigger(s) and Operation(s) are listed from the online documentation: [click here for more details](https://developer.integ.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-automation-api.html#object-schemas)\n\n> **Note** Currently, all the automation templates are considered private, which means that only the owner of the template can create automations from the template.\n\n---\n[see Online Doc](https://developer.integ.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-automation-api.html#create-automation-template)"
							},
							"response": []
						},
						{
							"name": "Create a Automation Template with Time Trigger",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"template\": {\n        \"trigger\": {\n            \"type\": \"Alexa.Automation.Trigger.Schedule.AbsoluteTime\",\n            \"version\": \"1.0\",\n            \"payload\": {\n                \"schedule\": {\n                    \"triggerTime\": \"${data.triggerTime}\",\n                    \"timeZoneId\": \"UTC\"\n                }\n            }\n        },\n        \"operations\": {\n            \"serial\": [\n                {\n                    \"operation\": {\n                        \"type\": \"Alexa.Automation.Operation.Speaker.SetVolume\",\n                        \"version\": 1.0,\n                        \"payload\": {\n                            \"endpoints\": \"${data.endpoints}\",\n                            \"payload\": {\n                                \"volume\": \"${data.volume}\"\n                            }\n                        }\n                    }\n                },\n                {\n                    \"operation\": {\n                        \"type\": \"Alexa.Automation.Operation.Settings.SetDoNotDisturbState\",\n                        \"version\": 1.0,\n                        \"payload\": {\n                            \"endpoints\": \"${data.endpoints}\",\n                            \"value\": false\n                        }\n                    }\n                },\n                {\n                    \"operation\": {\n                        \"type\": \"Alexa.Automation.Operation.Media.Stop\",\n                        \"version\": 1.0,\n                        \"payload\": {\n                            \"endpoints\": \"${data.endpoints}\"\n                        }\n                    }\n                }\n            ]\n        }\n    },\n    \"dataDefinition\": {\n        \"volume\": {\n            \"type\": \"integer\",\n            \"maximum\": 100,\n            \"minimum\": 0\n        },\n        \"triggerTime\": {\n            \"type\": \"string\"\n        },\n        \"endpoints\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\",\n                        \"pattern\": \"^amzn1.alexa.endpoint\"\n                    }\n                },\n                \"required\": [\n                    \"id\"\n                ]\n            },\n            \"minItems\": 0,\n            \"maxItems\": 2\n        },\n        \"required\": [\n            \"triggerTime\"\n        ]\n    },\n    \"friendlyName\": {\n        \"value\": {\n            \"text\": \"Trigger on Time\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v2/automations/templates",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"automations",
										"templates"
									]
								},
								"description": "Creates an automation template that's owned by the user the LWA token represents.\n---\n\nThe list of available Trigger(s) and Operation(s) are listed from the online documentation: [click here for more details](https://developer.integ.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-automation-api.html#object-schemas)\n\n> **Note** Currently, all the automation templates are considered private, which means that only the owner of the template can create automations from the template.\n\n---\n[see Online Doc](https://developer.integ.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-automation-api.html#create-automation-template)"
							},
							"response": []
						},
						{
							"name": "Get a Automation Template",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v2/automations/templates/{{TemplateId}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"automations",
										"templates",
										"{{TemplateId}}"
									]
								},
								"description": "Gets the automation template associated with the specified template ID.\n---\n\n*Required Request Path Parameters:*\n- `templateId`: Identifier of the automation template to delete. The format of the template ID must be `amzn1.alexa.automation.template.{id}`.\n\n> **Note:** The caller must be the owner of the automation template. Otherwise, Alexa returns a 404 response.\n\n\n---\n[see Online Doc](https://developer.integ.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-automation-api.html#get-automation-template)"
							},
							"response": []
						},
						{
							"name": "List Automation Templates",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v2/automations/templates?expand=all",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"automations",
										"templates"
									],
									"query": [
										{
											"key": "expand",
											"value": "all",
											"description": "Attribute (or set of attributes) to include in the response. Valid values: all. If expand isn't set, Alexa returns a list of templateId."
										}
									]
								},
								"description": "Lists the automation templates.\n---\n\n> **Note:** it only returns templates created by the customerId associated with the LWA token.\n\n\n---\n[see Online Doc](https://developer.integ.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-automation-api.html#list-automation-templates)"
							},
							"response": []
						},
						{
							"name": "Deletes a Automation Template",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v2/automations/templates/{{TemplateId}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"automations",
										"templates",
										"{{TemplateId}}"
									]
								},
								"description": "Deletes the automation template associated with the specified template ID.\n---\n\n*Required Request Path Parameters:*\n- `templateId`: Identifier of the automation template to delete. The format of the template ID must be `amzn1.alexa.automation.template.{id}`.\n\n---\n[see Online Doc](https://developer.integ.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-automation-api.html#delete-automation-template)"
							},
							"response": []
						}
					],
					"description": "An automation template defines the trigger to e called, the operations to be performed following this trigger and the optional conditions."
				},
				{
					"name": "Automations",
					"item": [
						{
							"name": "Create an Automation instance",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"associatedEntity\":{\n    \"type\":\"UNIT\",\n    \"id\":\"amzn1.alexa.unit.did.{id}\"\n  },\n  \"automation\":{\n    \"templateId\":\"amzn1.alexa.automation.template.{id}\",\n    \"data\":{\n      \"customUtterance\":{\n        \"text\":\"Good morning\"\n      }\n    }\n  },\n  \"friendlyName\":{\n    \"value\":{\n      \"text\":\"Test automation\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v2/automations",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"automations"
									]
								},
								"description": "Creates an automation instance from the automation template for the associated entity (unit).\n---\n\nTo create an Automation Instance, you need first to create an Automation Template. Then you would link the Template into an Instance of a Automation.\n\n*Required Request Body Parameters:*\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-automation-api.html#create-automation)\n\n> **Note:** At automation creation time, Alexa checks whether the requestor has access to the unit, whether the requestor owns the template, and whether the requestor has access to all the primitives in the template.\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-automation-api.html#create-automation)"
							},
							"response": []
						},
						{
							"name": "Get Automation by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v2/automations/{{AutomationId}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"automations",
										"{{AutomationId}}"
									]
								},
								"description": "Gets the attributes of the automation associated with the specified automation ID. \n---\n\nAlexa returns the automation with all resolved parameters.\n\n*Required Request Path Parameters:*\n- `associatedEntity.id`: The ID of the automation to retrieve.\n\n> **Note:** The caller must be the owner of the automation. Otherwise, Alexa returns a 404 response.\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-automation-api.html#get-automation)"
							},
							"response": []
						},
						{
							"name": "List Automations associated to a Unit - Identifiers Only",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v2/automations?associatedEntity.type=UNIT&associatedEntity.id={{UnitId}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"automations"
									],
									"query": [
										{
											"key": "associatedEntity.type",
											"value": "UNIT",
											"description": "Type of entity. Valid value: UNIT."
										},
										{
											"key": "associatedEntity.id",
											"value": "{{UnitId}}",
											"description": "ID that filters the results to only the automations that are associated with a UNIT."
										}
									]
								},
								"description": "Lists the automations associated with the given unitId.\n---\n\n*Required Request Query Parameters:*\n- `associatedEntity.id`: ID that filters the results to only the automations that are associated with a `UNIT`.\n- `associatedEntity.type`: Type of entity. Valid value: `UNIT`.\n\n> **Note:** You must have permission to view the automations in the given unit. Otherwise, Alexa returns an empty list.\n\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-automation-api.html#list-automations)"
							},
							"response": []
						},
						{
							"name": "List Automations associated to a Unit - Identifiers with Details",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v2/automations?associatedEntity.type=UNIT&associatedEntity.id={{UnitId}}&expand=all",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"automations"
									],
									"query": [
										{
											"key": "associatedEntity.type",
											"value": "UNIT",
											"description": "Type of entity. Valid value: UNIT."
										},
										{
											"key": "associatedEntity.id",
											"value": "{{UnitId}}",
											"description": "ID that filters the results to only the automations that are associated with a UNIT."
										},
										{
											"key": "expand",
											"value": "all",
											"description": "Attribute (or set of attributes) to include in the response. Valid values: all. If expand isn't set, Alexa returns a list of automationId."
										}
									]
								},
								"description": "Lists the automations associated with the given unitId.\n---\n\n*Required Request Query Parameters:*\n- `associatedEntity.id`: ID that filters the results to only the automations that are associated with a `UNIT`.\n- `associatedEntity.type`: Type of entity. Valid value: `UNIT`.\n\n> **Note:** You must have permission to view the automations in the given unit. Otherwise, Alexa returns an empty list.\n\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-automation-api.html#list-automations)"
							},
							"response": []
						},
						{
							"name": "Update an Automation instance - data part only",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"automation\":{\n    \"data\":{\n      \"customUtterance\":{\n        \"text\":\"Good night\"\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v2/automations/{{AutomationId}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"automations",
										"{{AutomationId}}"
									]
								},
								"description": "Updates the specified automation.\n---\n\n*Required Request Path Parameters:*\n- `automationId`: Identifier of the automation to delete.\n\n> **Note:** Currently, you can only update the data object.\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-automation-api.html#update-automation)"
							},
							"response": []
						},
						{
							"name": "Delete an Automation instance",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v2/automations/{{AutomationId}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v2",
										"automations",
										"{{AutomationId}}"
									]
								},
								"description": "Deletes the automation associated with the specified automation ID.\n---\n\n*Required Request Path Parameters:*\n- `automationId`: Identifier of the automation to delete.\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-in-senior-living-automation-api.html#delete-automation)"
							},
							"response": []
						}
					],
					"description": "An automation associated an automation template to an ASP unit"
				}
			],
			"description": "The Automation API enables you to specify operations for Alexa to automatically perform for users. An automation consists of a trigger, operations, and optional conditions.\n---"
		},
		{
			"name": "Event Messenger",
			"item": [
				{
					"name": "Subscription Configurations",
					"item": [
						{
							"name": "List Subscriptions Configurations",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v1/eventMessenger/subscriptionConfigurations?owner=~caller",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"eventMessenger",
										"subscriptionConfigurations"
									],
									"query": [
										{
											"key": "owner",
											"value": "~caller",
											"description": "A parameter that filters subscription configurations to only the subscriptions that the caller owns.\nThe only value currently supported is \"~caller\", which represents your information in the bearer token."
										}
									]
								},
								"description": "Gets Subscription Configurations.\n---\n\n*Required Request Query Parameters:*\n- `owner`: A parameter that filters subscription configurations to only the subscriptions that the caller owns.\nThe only value currently supported is \"~caller\", which represents your information in the bearer token.\n\n> **Note:** it only returns subscription configurations created by the customerId associated with the LWA token.\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-core-event-messenger-api.html#get-subscription-configurations)"
							},
							"response": []
						},
						{
							"name": "Get Subscriptions Configuration by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v1/eventMessenger/subscriptionConfigurations/{{SubscriptionConfigurationId}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"eventMessenger",
										"subscriptionConfigurations",
										"{{SubscriptionConfigurationId}}"
									]
								},
								"description": "Gets Subscription Configurations.\n---\n\n*Required Request Path Parameters:*\n- `id`: Unique ID of the subscription configuration to get. This ID is returned by the Create a subscription configuration operation.\n\n\n> **Note:** Subscription Configuration identifiers have the following pattern: `amzn1.alexa.aem.subscription.configuration.{id}`\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-core-event-messenger-api.html#get-subscription-configuration-by-id)"
							},
							"response": []
						},
						{
							"name": "Create a Subscriptions Configuration",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deliveryChannels\": [{\n    \"type\": \"SNS\",\n    \"id\": \"arn:aws:sns:us-east-1:123456789012:example-sns-topic-name\"\n  }]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v1/eventMessenger/subscriptionConfigurations",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"eventMessenger",
										"subscriptionConfigurations"
									]
								},
								"description": "Creates a Subscription Configuration\n---\n\nA Subscription Configuration defines a delivery channel that multiple subscriptions can use.\n\nCurrently, the only supported delivery channel for events is [Amazon Simple Notification Service (SNS)](https://aws.amazon.com/sns/)\n\n*Required Request Body Parameters:*\n- `deliveryChannels`: List of delivery mechanism configuration objects.\n- `deliveryChannels[*].type`: Type of delivery channel. Valid values: SNS.\n- `deliveryChannels[*].id`: Identifier of the channel the update is required on. Valid values: The Amazon Resource Name (ARN) of the SNS topic to which to publish events.\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-core-event-messenger-api.html#create-subscription-configuration)"
							},
							"response": []
						},
						{
							"name": "Delete a Subscription Configuration",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v1/eventMessenger/subscriptionConfigurations/{{SubscriptionConfiguration}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"eventMessenger",
										"subscriptionConfigurations",
										"{{SubscriptionConfiguration}}"
									]
								},
								"description": "Delete a Subscription Configuration\n---\n\n*Required Request Path Parameters:*\n- `id`: Unique ID of the subscription configuration to delete.\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-core-event-messenger-api.html#delete-subscription-configuration)"
							},
							"response": []
						}
					],
					"description": "A subscription configuration defines a delivery channel that multiple subscriptions can use."
				},
				{
					"name": "Subscriptions",
					"item": [
						{
							"name": "List Subscriptions by Owner",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v1/eventMessenger/subscriptions?owner=~caller",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"eventMessenger",
										"subscriptions"
									],
									"query": [
										{
											"key": "owner",
											"value": "~caller",
											"description": "A parameter that filters subscriptions to only the subscriptions that the caller owns.\nThe only value currently supported is \"~caller\", which represents your information in the bearer token."
										}
									]
								},
								"description": "Gets Subscriptions by Owner.\n---\n\n*Required Request Query Parameters:*\n- `owner`: A parameter that filters subscriptions to only the subscriptions that the caller owns.\nThe only value currently supported is \"~caller\", which represents your information in the bearer token.\n\n> **Note:** it only returns subscriptions created by the customerId associated with the LWA token.\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-core-event-messenger-api.html#get-subscriptions)"
							},
							"response": []
						},
						{
							"name": "List Subscriptions by Unit ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v1/eventMessenger/subscriptions?entities.unit.id={{UnitId}}&entities.unit.type=Unit",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"eventMessenger",
										"subscriptions"
									],
									"query": [
										{
											"key": "entities.unit.id",
											"value": "{{UnitId}}",
											"description": "A parameter that filters subscriptions to only those that are associated with a particular unitId. If you include this parameter, you must also include the entities.unit.type parameter."
										},
										{
											"key": "entities.unit.type",
											"value": "Unit",
											"description": "A parameter that filter subscriptions to only those that are associated with a particular unitType. If you include this parameter, you must also include the entities.unit.id parameter."
										}
									]
								},
								"description": "Gets Subscriptions by Unit ID.\n---\n\n*Required Request Query Parameters:*\n- `entities.unit.id`: A parameter that filters subscriptions to only those that are associated with a particular unitId. If you include this parameter, you must also include the `entities.unit.type` parameter.\n\n- `entities.unit.type`: A parameter that filter subscriptions to only those that are associated with a particular unitType. If you include this parameter, you must also include the `entities.unit.id` parameter.\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-core-event-messenger-api.html#get-subscriptions)"
							},
							"response": []
						},
						{
							"name": "List Subscriptions by Parent Unit ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v1/eventMessenger/subscriptions?entities.unit.parent.id={{UnitId}}&entities.unit.parent.type=Unit",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"eventMessenger",
										"subscriptions"
									],
									"query": [
										{
											"key": "entities.unit.parent.id",
											"value": "{{UnitId}}",
											"description": "A parameter that filters subscriptions to only those that are associated with a particular parent unitId. If you include this parameter, you must also include the entities.parent.type parameter."
										},
										{
											"key": "entities.unit.parent.type",
											"value": "Unit",
											"description": "A parameter that filters subscriptions to only those that are associated with a particular parent unitType. If you include this parameter, you must also include the entities.parent.id parameter."
										}
									]
								},
								"description": "Gets Subscriptions by Parent Unit ID.\n---\n\n*Required Request Query Parameters:*\n- `entities.unit.parent.id`: A parameter that filters subscriptions to only those that are associated with a particular parent unitId. If you include this parameter, you must also include the `entities.unit.parent.type` parameter.\n\n- `entities.unit.parent.type`: A parameter that filters subscriptions to only those that are associated with a particular parent unitType. If you include this parameter, you must also include the `entities.unit.parent.id` parameter.\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-core-event-messenger-api.html#get-subscriptions)"
							},
							"response": []
						},
						{
							"name": "Get Subscription by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v1/eventMessenger/subscriptions/{{SubscriptionId}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"eventMessenger",
										"subscriptions",
										"{{SubscriptionId}}"
									]
								},
								"description": "Gets Subscription by ID.\n---\n\n*Required Request Path Parameters:*\n- `id`: Unique ID of the subscription to get.\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-core-event-messenger-api.html#get-subscription-by-id)"
							},
							"response": []
						},
						{
							"name": "Create a Subscription",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"subscriptionConfigurationId\": \"amzn1.alexa.aem.subscription.configuration.123\",\n    \"eventType\": {\n        \"namespace\": \"Alexa.Automation.Execution\",\n        \"name\": \"Completion\"\n    },\n    \"entities\": {\n        \"unit\": {\n            \"type\": \"Unit\",\n            \"id\": \"{{UnitId}}\"\n        }\n    }\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{Host}}/v1/eventMessenger/subscriptions",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"eventMessenger",
										"subscriptions"
									]
								},
								"description": "Creates a Subscription.\n---\n\nA subscriptions specifies the type of event you want to subscribe to and which subscription configuration to use.\n\n*Required Request Body Parameters:*\n- `subscriptionConfigurationId`: Configuration ID of the subscription configuration.\n- `eventType`: Object that contains event details.\n- `eventType.namespace`: Represents the category an event belongs to. All automation-related events share the same namespace.\n- `eventType.name`: An event name within the namespace. \n\n---\n\nThe unit entity is required for the following events:\n\n- `Alexa.Automation.Execution.Completion`\n- `Alexa.Skill.Interaction.Failure`\n- `Alexa.Enterprise.Subscription.Activation`\n\n*Unit Entity parameter*\n\n- `unit`: Object that represents the details of a unit.\n- `unit.type`: Unit entity type. Valid values: `Unit`\n- `unit.id`: Unit identifier\n- `unit.parent`: Parent unit, which contains the parent ID.\n\n> Note: When you subscribe to an Enterprise subscription activation event (`Alexa.Enterprise.Subscription.Activation`), only specify the parent.\n\n---\n\nThe skill entity is required for the following events:\n\n- `Alexa.Skill.Interaction.Failure`\n\n*Skill Entity parameter*\n\n- `skill`: Object that represents the details of a skill.\n- `skill.type`: Skill entity type. Valid values: `Skill`\n- `skill.id`: Skill identifier\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-core-event-messenger-api.html#create-subscription)"
							},
							"response": []
						},
						{
							"name": "Delete Subscription",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://{{Host}}/v1/eventMessenger/subscriptions/{{SubscriptionId}}",
									"protocol": "https",
									"host": [
										"{{Host}}"
									],
									"path": [
										"v1",
										"eventMessenger",
										"subscriptions",
										"{{SubscriptionId}}"
									]
								},
								"description": "Deletes a Subscription by ID.\n---\n\n*Required Request Path Parameters:*\n- `id`: Unique ID of the subscription to delete.\n\n---\n[see Online Doc](https://developer.amazon.com/en-US/docs/alexa/alexa-smart-properties/asp-core-event-messenger-api.html#delete-subscription)"
							},
							"response": []
						}
					]
				}
			],
			"description": "The Event Messenger API enables you to subscribe to receive Alexa events. These events enable you to take actions such as raising alarms and retrying operations."
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{AccessToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"/**",
					" * Pre-request script ran before every API request.",
					" *",
					" * Get a new Access Token using the existing Refresh Token",
					" * Refresh Operation is performed only if Access Token has expired.",
					" * LWA Tokens expired after 60 minutes.",
					" */",
					"",
					"// Determine if the Access Token has expired or do not exist",
					"const accessToken = pm.collectionVariables.get('AccessToken');",
					"const hasAccessToken = (accessToken === undefined) ? false : String(accessToken).length > 0;",
					"const expiresAt = pm.collectionVariables.get('AccessTokenExpiresAt');",
					"const hasExpiration = (expiresAt === undefined) ? false : String(expiresAt).length > 0;",
					"let expired = !hasExpiration || !hasAccessToken;",
					"if (!expired)",
					"{",
					"    expired = Date.now() > Number(expiresAt);",
					"}",
					"",
					"// Determine if we have all the client credentials needed in the environment",
					"// Get LWA Securify Profile values from Variables",
					"const clientId = pm.collectionVariables.get('ClientId');",
					"const clientSecret = pm.collectionVariables.get('ClientSecret');",
					"const refreshToken = pm.collectionVariables.get('RefreshToken');",
					"// Test variable existence/content",
					"const hasClientId = (clientId === undefined) ? false : String(clientId).length > 0;",
					"const hasClientSecret = (clientSecret === undefined) ? false : String(clientSecret).length > 0;",
					"const hasRefreshToken = (refreshToken === undefined) ? false : String(refreshToken).length > 0;",
					"const hasCredentials = hasClientId && hasClientSecret && hasRefreshToken;",
					"const needNewToken = hasCredentials && expired;",
					"",
					"// if the access token expired (or dot not exist) use the refresh token to create a new access token",
					"if (needNewToken) {",
					"  console.log(\"Requesting a new Access Token\");",
					"  // send a new API request to refresh the access token",
					"  pm.sendRequest({",
					"    url: 'https://api.amazon.com/auth/o2/token',",
					"    method: 'POST',",
					"    headers: { 'Content-Type': 'Content-Type: application/x-www-form-urlencoded' },",
					"    body: {",
					"      mode: 'urlencoded',",
					"      urlencoded: [",
					"        { key: 'client_id', value: clientId, disabled: false },",
					"        { key: 'client_secret', value: clientSecret, disabled: false },",
					"        { key: 'refresh_token', value: refreshToken, disabled: false },",
					"        { key: 'grant_type', value: 'refresh_token', disabled: false }",
					"      ]",
					"    }",
					"  }, function (error, response) {",
					"    if (error || response.json().error) {",
					"      // if an error occured, log the error and raise a message to the user.",
					"      console.log('Could not refresh the access token')",
					"      console.log(error)",
					"      console.log(response.json())",
					"      throw new Error('Could not refresh the access token. Check the console for more details.')",
					"    } else {",
					"        console.log(\"New Access Token retrieved, updating Collection Variables\");",
					"      // otherwise, fetch the new access token and store it",
					"      const data = response.json();",
					"      // determine when this token is set to expire at",
					"      const newExpiresAt = Date.now() + data.expires_in * 1000",
					"      // store the new variables in the environment",
					"      pm.collectionVariables.set('AccessToken', data.access_token)",
					"      pm.collectionVariables.set('RefreshToken', data.refresh_token)",
					"      pm.collectionVariables.set('AccessTokenExpiresAt', newExpiresAt)",
					"    }",
					"  })",
					"} else if (!hasCredentials){",
					"  // otherwise, throw a message to the user if the access token expired.",
					"  throw new Error('Cannot Generate an AccessToken: Please provide a valid LWA Security Profile (ClientId and ClientSecret) along with a valid RefreshToken to generate a new Access Token');",
					"} else {",
					"    // Good to go, Access Token is still valid",
					"    console.log(\"Access Token still valid, proceed to request execution\")",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "Host",
			"value": "api.amazonalexa.com"
		},
		{
			"key": "ClientId",
			"value": ""
		},
		{
			"key": "ClientSecret",
			"value": ""
		},
		{
			"key": "Scope",
			"value": "alexa::enterprise:management credential_locker::wifi_management profile:user_id"
		},
		{
			"key": "AccessToken",
			"value": ""
		},
		{
			"key": "AccessTokenExpiresAt",
			"value": ""
		},
		{
			"key": "OrgId",
			"value": ""
		},
		{
			"key": "UnitId",
			"value": "",
			"type": "default"
		},
		{
			"key": "RoleId",
			"value": ""
		},
		{
			"key": "PrincipalId",
			"value": ""
		},
		{
			"key": "EndpointId",
			"value": ""
		},
		{
			"key": "EndpointGroupId",
			"value": ""
		},
		{
			"key": "ApplianceId",
			"value": ""
		},
		{
			"key": "WifiSsid",
			"value": ""
		},
		{
			"key": "WifiPassword",
			"value": ""
		},
		{
			"key": "WifiOperationId",
			"value": ""
		},
		{
			"key": "SkillId",
			"value": ""
		},
		{
			"key": "SkillStageDev",
			"value": "development"
		},
		{
			"key": "SkillStageLive",
			"value": "live"
		},
		{
			"key": "AddressBookId",
			"value": ""
		},
		{
			"key": "CommsProfileId",
			"value": ""
		},
		{
			"key": "ContactId",
			"value": ""
		},
		{
			"key": "MaxResults",
			"value": ""
		},
		{
			"key": "NextToken",
			"value": ""
		},
		{
			"key": "RefreshToken",
			"value": "",
			"type": "string"
		}
	]
}
